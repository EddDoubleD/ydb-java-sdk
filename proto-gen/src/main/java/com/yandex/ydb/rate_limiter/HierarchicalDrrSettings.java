// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ydb/public/api/protos/ydb_rate_limiter.proto

package tech.ydb.rate_limiter;

/**
 * <pre>
 * Settings for hierarchical deficit round robin (HDRR) algorithm.
 * </pre>
 *
 * Protobuf type {@code Ydb.RateLimiter.HierarchicalDrrSettings}
 */
public final class HierarchicalDrrSettings extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Ydb.RateLimiter.HierarchicalDrrSettings)
    HierarchicalDrrSettingsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use HierarchicalDrrSettings.newBuilder() to construct.
  private HierarchicalDrrSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HierarchicalDrrSettings() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new HierarchicalDrrSettings();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private HierarchicalDrrSettings(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 9: {

            maxUnitsPerSecond_ = input.readDouble();
            break;
          }
          case 17: {

            maxBurstSizeCoefficient_ = input.readDouble();
            break;
          }
          case 25: {

            prefetchCoefficient_ = input.readDouble();
            break;
          }
          case 33: {

            prefetchWatermark_ = input.readDouble();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return tech.ydb.rate_limiter.RateLimiterProtos.internal_static_Ydb_RateLimiter_HierarchicalDrrSettings_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return tech.ydb.rate_limiter.RateLimiterProtos.internal_static_Ydb_RateLimiter_HierarchicalDrrSettings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            tech.ydb.rate_limiter.HierarchicalDrrSettings.class, tech.ydb.rate_limiter.HierarchicalDrrSettings.Builder.class);
  }

  public static final int MAX_UNITS_PER_SECOND_FIELD_NUMBER = 1;
  private double maxUnitsPerSecond_;
  /**
   * <pre>
   * Resource consumption speed limit.
   * Value is required for root resource.
   * 0 is equivalent to not set.
   * Must be nonnegative.
   * </pre>
   *
   * <code>double max_units_per_second = 1;</code>
   * @return The maxUnitsPerSecond.
   */
  @java.lang.Override
  public double getMaxUnitsPerSecond() {
    return maxUnitsPerSecond_;
  }

  public static final int MAX_BURST_SIZE_COEFFICIENT_FIELD_NUMBER = 2;
  private double maxBurstSizeCoefficient_;
  /**
   * <pre>
   * Maximum burst size of resource consumption across the whole cluster
   * divided by max_units_per_second.
   * Default value is 1.
   * This means that maximum burst size might be equal to max_units_per_second.
   * 0 is equivalent to not set.
   * Must be nonnegative.
   * </pre>
   *
   * <code>double max_burst_size_coefficient = 2;</code>
   * @return The maxBurstSizeCoefficient.
   */
  @java.lang.Override
  public double getMaxBurstSizeCoefficient() {
    return maxBurstSizeCoefficient_;
  }

  public static final int PREFETCH_COEFFICIENT_FIELD_NUMBER = 3;
  private double prefetchCoefficient_;
  /**
   * <pre>
   * Prefetch in local bucket up to prefetch_coefficient*max_units_per_second units (full size).
   * Default value is inherited from parent or 0.2 for root.
   * Disables prefetching if any negative value is set
   * (It is useful to avoid bursts in case of large number of local buckets).
   * </pre>
   *
   * <code>double prefetch_coefficient = 3;</code>
   * @return The prefetchCoefficient.
   */
  @java.lang.Override
  public double getPrefetchCoefficient() {
    return prefetchCoefficient_;
  }

  public static final int PREFETCH_WATERMARK_FIELD_NUMBER = 4;
  private double prefetchWatermark_;
  /**
   * <pre>
   * Prefetching starts if there is less than prefetch_watermark fraction of full local bucket left.
   * Default value is inherited from parent or 0.75 for root.
   * Must be nonnegative and less than or equal to 1.
   * </pre>
   *
   * <code>double prefetch_watermark = 4;</code>
   * @return The prefetchWatermark.
   */
  @java.lang.Override
  public double getPrefetchWatermark() {
    return prefetchWatermark_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (maxUnitsPerSecond_ != 0D) {
      output.writeDouble(1, maxUnitsPerSecond_);
    }
    if (maxBurstSizeCoefficient_ != 0D) {
      output.writeDouble(2, maxBurstSizeCoefficient_);
    }
    if (prefetchCoefficient_ != 0D) {
      output.writeDouble(3, prefetchCoefficient_);
    }
    if (prefetchWatermark_ != 0D) {
      output.writeDouble(4, prefetchWatermark_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (maxUnitsPerSecond_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, maxUnitsPerSecond_);
    }
    if (maxBurstSizeCoefficient_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, maxBurstSizeCoefficient_);
    }
    if (prefetchCoefficient_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, prefetchCoefficient_);
    }
    if (prefetchWatermark_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, prefetchWatermark_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof tech.ydb.rate_limiter.HierarchicalDrrSettings)) {
      return super.equals(obj);
    }
    tech.ydb.rate_limiter.HierarchicalDrrSettings other = (tech.ydb.rate_limiter.HierarchicalDrrSettings) obj;

    if (java.lang.Double.doubleToLongBits(getMaxUnitsPerSecond())
        != java.lang.Double.doubleToLongBits(
            other.getMaxUnitsPerSecond())) return false;
    if (java.lang.Double.doubleToLongBits(getMaxBurstSizeCoefficient())
        != java.lang.Double.doubleToLongBits(
            other.getMaxBurstSizeCoefficient())) return false;
    if (java.lang.Double.doubleToLongBits(getPrefetchCoefficient())
        != java.lang.Double.doubleToLongBits(
            other.getPrefetchCoefficient())) return false;
    if (java.lang.Double.doubleToLongBits(getPrefetchWatermark())
        != java.lang.Double.doubleToLongBits(
            other.getPrefetchWatermark())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MAX_UNITS_PER_SECOND_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMaxUnitsPerSecond()));
    hash = (37 * hash) + MAX_BURST_SIZE_COEFFICIENT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMaxBurstSizeCoefficient()));
    hash = (37 * hash) + PREFETCH_COEFFICIENT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getPrefetchCoefficient()));
    hash = (37 * hash) + PREFETCH_WATERMARK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getPrefetchWatermark()));
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static tech.ydb.rate_limiter.HierarchicalDrrSettings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(tech.ydb.rate_limiter.HierarchicalDrrSettings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Settings for hierarchical deficit round robin (HDRR) algorithm.
   * </pre>
   *
   * Protobuf type {@code Ydb.RateLimiter.HierarchicalDrrSettings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Ydb.RateLimiter.HierarchicalDrrSettings)
      tech.ydb.rate_limiter.HierarchicalDrrSettingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tech.ydb.rate_limiter.RateLimiterProtos.internal_static_Ydb_RateLimiter_HierarchicalDrrSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tech.ydb.rate_limiter.RateLimiterProtos.internal_static_Ydb_RateLimiter_HierarchicalDrrSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tech.ydb.rate_limiter.HierarchicalDrrSettings.class, tech.ydb.rate_limiter.HierarchicalDrrSettings.Builder.class);
    }

    // Construct using tech.ydb.rate_limiter.HierarchicalDrrSettings.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      maxUnitsPerSecond_ = 0D;

      maxBurstSizeCoefficient_ = 0D;

      prefetchCoefficient_ = 0D;

      prefetchWatermark_ = 0D;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return tech.ydb.rate_limiter.RateLimiterProtos.internal_static_Ydb_RateLimiter_HierarchicalDrrSettings_descriptor;
    }

    @java.lang.Override
    public tech.ydb.rate_limiter.HierarchicalDrrSettings getDefaultInstanceForType() {
      return tech.ydb.rate_limiter.HierarchicalDrrSettings.getDefaultInstance();
    }

    @java.lang.Override
    public tech.ydb.rate_limiter.HierarchicalDrrSettings build() {
      tech.ydb.rate_limiter.HierarchicalDrrSettings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public tech.ydb.rate_limiter.HierarchicalDrrSettings buildPartial() {
      tech.ydb.rate_limiter.HierarchicalDrrSettings result = new tech.ydb.rate_limiter.HierarchicalDrrSettings(this);
      result.maxUnitsPerSecond_ = maxUnitsPerSecond_;
      result.maxBurstSizeCoefficient_ = maxBurstSizeCoefficient_;
      result.prefetchCoefficient_ = prefetchCoefficient_;
      result.prefetchWatermark_ = prefetchWatermark_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof tech.ydb.rate_limiter.HierarchicalDrrSettings) {
        return mergeFrom((tech.ydb.rate_limiter.HierarchicalDrrSettings)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(tech.ydb.rate_limiter.HierarchicalDrrSettings other) {
      if (other == tech.ydb.rate_limiter.HierarchicalDrrSettings.getDefaultInstance()) return this;
      if (other.getMaxUnitsPerSecond() != 0D) {
        setMaxUnitsPerSecond(other.getMaxUnitsPerSecond());
      }
      if (other.getMaxBurstSizeCoefficient() != 0D) {
        setMaxBurstSizeCoefficient(other.getMaxBurstSizeCoefficient());
      }
      if (other.getPrefetchCoefficient() != 0D) {
        setPrefetchCoefficient(other.getPrefetchCoefficient());
      }
      if (other.getPrefetchWatermark() != 0D) {
        setPrefetchWatermark(other.getPrefetchWatermark());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      tech.ydb.rate_limiter.HierarchicalDrrSettings parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (tech.ydb.rate_limiter.HierarchicalDrrSettings) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private double maxUnitsPerSecond_ ;
    /**
     * <pre>
     * Resource consumption speed limit.
     * Value is required for root resource.
     * 0 is equivalent to not set.
     * Must be nonnegative.
     * </pre>
     *
     * <code>double max_units_per_second = 1;</code>
     * @return The maxUnitsPerSecond.
     */
    @java.lang.Override
    public double getMaxUnitsPerSecond() {
      return maxUnitsPerSecond_;
    }
    /**
     * <pre>
     * Resource consumption speed limit.
     * Value is required for root resource.
     * 0 is equivalent to not set.
     * Must be nonnegative.
     * </pre>
     *
     * <code>double max_units_per_second = 1;</code>
     * @param value The maxUnitsPerSecond to set.
     * @return This builder for chaining.
     */
    public Builder setMaxUnitsPerSecond(double value) {
      
      maxUnitsPerSecond_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Resource consumption speed limit.
     * Value is required for root resource.
     * 0 is equivalent to not set.
     * Must be nonnegative.
     * </pre>
     *
     * <code>double max_units_per_second = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxUnitsPerSecond() {
      
      maxUnitsPerSecond_ = 0D;
      onChanged();
      return this;
    }

    private double maxBurstSizeCoefficient_ ;
    /**
     * <pre>
     * Maximum burst size of resource consumption across the whole cluster
     * divided by max_units_per_second.
     * Default value is 1.
     * This means that maximum burst size might be equal to max_units_per_second.
     * 0 is equivalent to not set.
     * Must be nonnegative.
     * </pre>
     *
     * <code>double max_burst_size_coefficient = 2;</code>
     * @return The maxBurstSizeCoefficient.
     */
    @java.lang.Override
    public double getMaxBurstSizeCoefficient() {
      return maxBurstSizeCoefficient_;
    }
    /**
     * <pre>
     * Maximum burst size of resource consumption across the whole cluster
     * divided by max_units_per_second.
     * Default value is 1.
     * This means that maximum burst size might be equal to max_units_per_second.
     * 0 is equivalent to not set.
     * Must be nonnegative.
     * </pre>
     *
     * <code>double max_burst_size_coefficient = 2;</code>
     * @param value The maxBurstSizeCoefficient to set.
     * @return This builder for chaining.
     */
    public Builder setMaxBurstSizeCoefficient(double value) {
      
      maxBurstSizeCoefficient_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Maximum burst size of resource consumption across the whole cluster
     * divided by max_units_per_second.
     * Default value is 1.
     * This means that maximum burst size might be equal to max_units_per_second.
     * 0 is equivalent to not set.
     * Must be nonnegative.
     * </pre>
     *
     * <code>double max_burst_size_coefficient = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxBurstSizeCoefficient() {
      
      maxBurstSizeCoefficient_ = 0D;
      onChanged();
      return this;
    }

    private double prefetchCoefficient_ ;
    /**
     * <pre>
     * Prefetch in local bucket up to prefetch_coefficient*max_units_per_second units (full size).
     * Default value is inherited from parent or 0.2 for root.
     * Disables prefetching if any negative value is set
     * (It is useful to avoid bursts in case of large number of local buckets).
     * </pre>
     *
     * <code>double prefetch_coefficient = 3;</code>
     * @return The prefetchCoefficient.
     */
    @java.lang.Override
    public double getPrefetchCoefficient() {
      return prefetchCoefficient_;
    }
    /**
     * <pre>
     * Prefetch in local bucket up to prefetch_coefficient*max_units_per_second units (full size).
     * Default value is inherited from parent or 0.2 for root.
     * Disables prefetching if any negative value is set
     * (It is useful to avoid bursts in case of large number of local buckets).
     * </pre>
     *
     * <code>double prefetch_coefficient = 3;</code>
     * @param value The prefetchCoefficient to set.
     * @return This builder for chaining.
     */
    public Builder setPrefetchCoefficient(double value) {
      
      prefetchCoefficient_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Prefetch in local bucket up to prefetch_coefficient*max_units_per_second units (full size).
     * Default value is inherited from parent or 0.2 for root.
     * Disables prefetching if any negative value is set
     * (It is useful to avoid bursts in case of large number of local buckets).
     * </pre>
     *
     * <code>double prefetch_coefficient = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrefetchCoefficient() {
      
      prefetchCoefficient_ = 0D;
      onChanged();
      return this;
    }

    private double prefetchWatermark_ ;
    /**
     * <pre>
     * Prefetching starts if there is less than prefetch_watermark fraction of full local bucket left.
     * Default value is inherited from parent or 0.75 for root.
     * Must be nonnegative and less than or equal to 1.
     * </pre>
     *
     * <code>double prefetch_watermark = 4;</code>
     * @return The prefetchWatermark.
     */
    @java.lang.Override
    public double getPrefetchWatermark() {
      return prefetchWatermark_;
    }
    /**
     * <pre>
     * Prefetching starts if there is less than prefetch_watermark fraction of full local bucket left.
     * Default value is inherited from parent or 0.75 for root.
     * Must be nonnegative and less than or equal to 1.
     * </pre>
     *
     * <code>double prefetch_watermark = 4;</code>
     * @param value The prefetchWatermark to set.
     * @return This builder for chaining.
     */
    public Builder setPrefetchWatermark(double value) {
      
      prefetchWatermark_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Prefetching starts if there is less than prefetch_watermark fraction of full local bucket left.
     * Default value is inherited from parent or 0.75 for root.
     * Must be nonnegative and less than or equal to 1.
     * </pre>
     *
     * <code>double prefetch_watermark = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrefetchWatermark() {
      
      prefetchWatermark_ = 0D;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Ydb.RateLimiter.HierarchicalDrrSettings)
  }

  // @@protoc_insertion_point(class_scope:Ydb.RateLimiter.HierarchicalDrrSettings)
  private static final tech.ydb.rate_limiter.HierarchicalDrrSettings DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new tech.ydb.rate_limiter.HierarchicalDrrSettings();
  }

  public static tech.ydb.rate_limiter.HierarchicalDrrSettings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HierarchicalDrrSettings>
      PARSER = new com.google.protobuf.AbstractParser<HierarchicalDrrSettings>() {
    @java.lang.Override
    public HierarchicalDrrSettings parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new HierarchicalDrrSettings(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HierarchicalDrrSettings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HierarchicalDrrSettings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public tech.ydb.rate_limiter.HierarchicalDrrSettings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

