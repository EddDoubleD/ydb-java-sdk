// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ydb/library/yql/dq/proto/dq_checkpoint.proto

package NYql.NDqProto;

public final class DqCheckpoint {
  private DqCheckpoint() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TStateDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NYql.NDqProto.TStateData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
     * @return Whether the stateId field is set.
     */
    boolean hasStateId();
    /**
     * <pre>
     * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
     * @return The stateId.
     */
    NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId getStateId();
    /**
     * <pre>
     * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
     */
    NYql.NDqProto.DqCheckpoint.TStateData.TExtStateIdOrBuilder getStateIdOrBuilder();

    /**
     * <pre>
     * In-place blob data for small blobs
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
     * @return Whether the stateData field is set.
     */
    boolean hasStateData();
    /**
     * <pre>
     * In-place blob data for small blobs
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
     * @return The stateData.
     */
    NYql.NDqProto.DqCheckpoint.TStateData.TData getStateData();
    /**
     * <pre>
     * In-place blob data for small blobs
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
     */
    NYql.NDqProto.DqCheckpoint.TStateData.TDataOrBuilder getStateDataOrBuilder();

    public NYql.NDqProto.DqCheckpoint.TStateData.StateCase getStateCase();
  }
  /**
   * Protobuf type {@code NYql.NDqProto.TStateData}
   */
  public static final class TStateData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NYql.NDqProto.TStateData)
      TStateDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TStateData.newBuilder() to construct.
    private TStateData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TStateData() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TStateData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TStateData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.Builder subBuilder = null;
              if (stateCase_ == 1) {
                subBuilder = ((NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) state_).toBuilder();
              }
              state_ =
                  input.readMessage(NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) state_);
                state_ = subBuilder.buildPartial();
              }
              stateCase_ = 1;
              break;
            }
            case 18: {
              NYql.NDqProto.DqCheckpoint.TStateData.TData.Builder subBuilder = null;
              if (stateCase_ == 2) {
                subBuilder = ((NYql.NDqProto.DqCheckpoint.TStateData.TData) state_).toBuilder();
              }
              state_ =
                  input.readMessage(NYql.NDqProto.DqCheckpoint.TStateData.TData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((NYql.NDqProto.DqCheckpoint.TStateData.TData) state_);
                state_ = subBuilder.buildPartial();
              }
              stateCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NYql.NDqProto.DqCheckpoint.TStateData.class, NYql.NDqProto.DqCheckpoint.TStateData.Builder.class);
    }

    public interface TExtStateIdOrBuilder extends
        // @@protoc_insertion_point(interface_extends:NYql.NDqProto.TStateData.TExtStateId)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>uint32 StateId = 1;</code>
       * @return The stateId.
       */
      int getStateId();
    }
    /**
     * Protobuf type {@code NYql.NDqProto.TStateData.TExtStateId}
     */
    public static final class TExtStateId extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:NYql.NDqProto.TStateData.TExtStateId)
        TExtStateIdOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TExtStateId.newBuilder() to construct.
      private TExtStateId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TExtStateId() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TExtStateId();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TExtStateId(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                stateId_ = input.readUInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_TExtStateId_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_TExtStateId_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.class, NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.Builder.class);
      }

      public static final int STATEID_FIELD_NUMBER = 1;
      private int stateId_;
      /**
       * <code>uint32 StateId = 1;</code>
       * @return The stateId.
       */
      @java.lang.Override
      public int getStateId() {
        return stateId_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (stateId_ != 0) {
          output.writeUInt32(1, stateId_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (stateId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, stateId_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId)) {
          return super.equals(obj);
        }
        NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId other = (NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) obj;

        if (getStateId()
            != other.getStateId()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + STATEID_FIELD_NUMBER;
        hash = (53 * hash) + getStateId();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code NYql.NDqProto.TStateData.TExtStateId}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:NYql.NDqProto.TStateData.TExtStateId)
          NYql.NDqProto.DqCheckpoint.TStateData.TExtStateIdOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_TExtStateId_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_TExtStateId_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.class, NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.Builder.class);
        }

        // Construct using NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          stateId_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_TExtStateId_descriptor;
        }

        @java.lang.Override
        public NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId getDefaultInstanceForType() {
          return NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.getDefaultInstance();
        }

        @java.lang.Override
        public NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId build() {
          NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId buildPartial() {
          NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId result = new NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId(this);
          result.stateId_ = stateId_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) {
            return mergeFrom((NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId other) {
          if (other == NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.getDefaultInstance()) return this;
          if (other.getStateId() != 0) {
            setStateId(other.getStateId());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int stateId_ ;
        /**
         * <code>uint32 StateId = 1;</code>
         * @return The stateId.
         */
        @java.lang.Override
        public int getStateId() {
          return stateId_;
        }
        /**
         * <code>uint32 StateId = 1;</code>
         * @param value The stateId to set.
         * @return This builder for chaining.
         */
        public Builder setStateId(int value) {
          
          stateId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 StateId = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearStateId() {
          
          stateId_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:NYql.NDqProto.TStateData.TExtStateId)
      }

      // @@protoc_insertion_point(class_scope:NYql.NDqProto.TStateData.TExtStateId)
      private static final NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId();
      }

      public static NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TExtStateId>
          PARSER = new com.google.protobuf.AbstractParser<TExtStateId>() {
        @java.lang.Override
        public TExtStateId parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TExtStateId(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TExtStateId> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TExtStateId> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:NYql.NDqProto.TStateData.TData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bytes Blob = 1;</code>
       * @return The blob.
       */
      com.google.protobuf.ByteString getBlob();

      /**
       * <pre>
       * TODO: codec
       * TODO: structured data (map, array)
       * TODO: minikql node explicit id (HOP)
       * </pre>
       *
       * <code>uint64 Version = 2;</code>
       * @return The version.
       */
      long getVersion();
    }
    /**
     * Protobuf type {@code NYql.NDqProto.TStateData.TData}
     */
    public static final class TData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:NYql.NDqProto.TStateData.TData)
        TDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TData.newBuilder() to construct.
      private TData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TData() {
        blob_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {

                blob_ = input.readBytes();
                break;
              }
              case 16: {

                version_ = input.readUInt64();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_TData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_TData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NYql.NDqProto.DqCheckpoint.TStateData.TData.class, NYql.NDqProto.DqCheckpoint.TStateData.TData.Builder.class);
      }

      public static final int BLOB_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString blob_;
      /**
       * <code>bytes Blob = 1;</code>
       * @return The blob.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlob() {
        return blob_;
      }

      public static final int VERSION_FIELD_NUMBER = 2;
      private long version_;
      /**
       * <pre>
       * TODO: codec
       * TODO: structured data (map, array)
       * TODO: minikql node explicit id (HOP)
       * </pre>
       *
       * <code>uint64 Version = 2;</code>
       * @return The version.
       */
      @java.lang.Override
      public long getVersion() {
        return version_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!blob_.isEmpty()) {
          output.writeBytes(1, blob_);
        }
        if (version_ != 0L) {
          output.writeUInt64(2, version_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!blob_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, blob_);
        }
        if (version_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, version_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof NYql.NDqProto.DqCheckpoint.TStateData.TData)) {
          return super.equals(obj);
        }
        NYql.NDqProto.DqCheckpoint.TStateData.TData other = (NYql.NDqProto.DqCheckpoint.TStateData.TData) obj;

        if (!getBlob()
            .equals(other.getBlob())) return false;
        if (getVersion()
            != other.getVersion()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + BLOB_FIELD_NUMBER;
        hash = (53 * hash) + getBlob().hashCode();
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getVersion());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static NYql.NDqProto.DqCheckpoint.TStateData.TData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(NYql.NDqProto.DqCheckpoint.TStateData.TData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code NYql.NDqProto.TStateData.TData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:NYql.NDqProto.TStateData.TData)
          NYql.NDqProto.DqCheckpoint.TStateData.TDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_TData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_TData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  NYql.NDqProto.DqCheckpoint.TStateData.TData.class, NYql.NDqProto.DqCheckpoint.TStateData.TData.Builder.class);
        }

        // Construct using NYql.NDqProto.DqCheckpoint.TStateData.TData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          blob_ = com.google.protobuf.ByteString.EMPTY;

          version_ = 0L;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_TData_descriptor;
        }

        @java.lang.Override
        public NYql.NDqProto.DqCheckpoint.TStateData.TData getDefaultInstanceForType() {
          return NYql.NDqProto.DqCheckpoint.TStateData.TData.getDefaultInstance();
        }

        @java.lang.Override
        public NYql.NDqProto.DqCheckpoint.TStateData.TData build() {
          NYql.NDqProto.DqCheckpoint.TStateData.TData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public NYql.NDqProto.DqCheckpoint.TStateData.TData buildPartial() {
          NYql.NDqProto.DqCheckpoint.TStateData.TData result = new NYql.NDqProto.DqCheckpoint.TStateData.TData(this);
          result.blob_ = blob_;
          result.version_ = version_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof NYql.NDqProto.DqCheckpoint.TStateData.TData) {
            return mergeFrom((NYql.NDqProto.DqCheckpoint.TStateData.TData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(NYql.NDqProto.DqCheckpoint.TStateData.TData other) {
          if (other == NYql.NDqProto.DqCheckpoint.TStateData.TData.getDefaultInstance()) return this;
          if (other.getBlob() != com.google.protobuf.ByteString.EMPTY) {
            setBlob(other.getBlob());
          }
          if (other.getVersion() != 0L) {
            setVersion(other.getVersion());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          NYql.NDqProto.DqCheckpoint.TStateData.TData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (NYql.NDqProto.DqCheckpoint.TStateData.TData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.ByteString blob_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>bytes Blob = 1;</code>
         * @return The blob.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getBlob() {
          return blob_;
        }
        /**
         * <code>bytes Blob = 1;</code>
         * @param value The blob to set.
         * @return This builder for chaining.
         */
        public Builder setBlob(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          blob_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bytes Blob = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearBlob() {
          
          blob_ = getDefaultInstance().getBlob();
          onChanged();
          return this;
        }

        private long version_ ;
        /**
         * <pre>
         * TODO: codec
         * TODO: structured data (map, array)
         * TODO: minikql node explicit id (HOP)
         * </pre>
         *
         * <code>uint64 Version = 2;</code>
         * @return The version.
         */
        @java.lang.Override
        public long getVersion() {
          return version_;
        }
        /**
         * <pre>
         * TODO: codec
         * TODO: structured data (map, array)
         * TODO: minikql node explicit id (HOP)
         * </pre>
         *
         * <code>uint64 Version = 2;</code>
         * @param value The version to set.
         * @return This builder for chaining.
         */
        public Builder setVersion(long value) {
          
          version_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO: codec
         * TODO: structured data (map, array)
         * TODO: minikql node explicit id (HOP)
         * </pre>
         *
         * <code>uint64 Version = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearVersion() {
          
          version_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:NYql.NDqProto.TStateData.TData)
      }

      // @@protoc_insertion_point(class_scope:NYql.NDqProto.TStateData.TData)
      private static final NYql.NDqProto.DqCheckpoint.TStateData.TData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new NYql.NDqProto.DqCheckpoint.TStateData.TData();
      }

      public static NYql.NDqProto.DqCheckpoint.TStateData.TData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TData>
          PARSER = new com.google.protobuf.AbstractParser<TData>() {
        @java.lang.Override
        public TData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TStateData.TData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int stateCase_ = 0;
    private java.lang.Object state_;
    public enum StateCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      STATEID(1),
      STATEDATA(2),
      STATE_NOT_SET(0);
      private final int value;
      private StateCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static StateCase valueOf(int value) {
        return forNumber(value);
      }

      public static StateCase forNumber(int value) {
        switch (value) {
          case 1: return STATEID;
          case 2: return STATEDATA;
          case 0: return STATE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public StateCase
    getStateCase() {
      return StateCase.forNumber(
          stateCase_);
    }

    public static final int STATEID_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
     * @return Whether the stateId field is set.
     */
    @java.lang.Override
    public boolean hasStateId() {
      return stateCase_ == 1;
    }
    /**
     * <pre>
     * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
     * @return The stateId.
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId getStateId() {
      if (stateCase_ == 1) {
         return (NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) state_;
      }
      return NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.getDefaultInstance();
    }
    /**
     * <pre>
     * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TStateData.TExtStateIdOrBuilder getStateIdOrBuilder() {
      if (stateCase_ == 1) {
         return (NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) state_;
      }
      return NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.getDefaultInstance();
    }

    public static final int STATEDATA_FIELD_NUMBER = 2;
    /**
     * <pre>
     * In-place blob data for small blobs
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
     * @return Whether the stateData field is set.
     */
    @java.lang.Override
    public boolean hasStateData() {
      return stateCase_ == 2;
    }
    /**
     * <pre>
     * In-place blob data for small blobs
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
     * @return The stateData.
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TStateData.TData getStateData() {
      if (stateCase_ == 2) {
         return (NYql.NDqProto.DqCheckpoint.TStateData.TData) state_;
      }
      return NYql.NDqProto.DqCheckpoint.TStateData.TData.getDefaultInstance();
    }
    /**
     * <pre>
     * In-place blob data for small blobs
     * </pre>
     *
     * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TStateData.TDataOrBuilder getStateDataOrBuilder() {
      if (stateCase_ == 2) {
         return (NYql.NDqProto.DqCheckpoint.TStateData.TData) state_;
      }
      return NYql.NDqProto.DqCheckpoint.TStateData.TData.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (stateCase_ == 1) {
        output.writeMessage(1, (NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) state_);
      }
      if (stateCase_ == 2) {
        output.writeMessage(2, (NYql.NDqProto.DqCheckpoint.TStateData.TData) state_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (stateCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) state_);
      }
      if (stateCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (NYql.NDqProto.DqCheckpoint.TStateData.TData) state_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NYql.NDqProto.DqCheckpoint.TStateData)) {
        return super.equals(obj);
      }
      NYql.NDqProto.DqCheckpoint.TStateData other = (NYql.NDqProto.DqCheckpoint.TStateData) obj;

      if (!getStateCase().equals(other.getStateCase())) return false;
      switch (stateCase_) {
        case 1:
          if (!getStateId()
              .equals(other.getStateId())) return false;
          break;
        case 2:
          if (!getStateData()
              .equals(other.getStateData())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (stateCase_) {
        case 1:
          hash = (37 * hash) + STATEID_FIELD_NUMBER;
          hash = (53 * hash) + getStateId().hashCode();
          break;
        case 2:
          hash = (37 * hash) + STATEDATA_FIELD_NUMBER;
          hash = (53 * hash) + getStateData().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NYql.NDqProto.DqCheckpoint.TStateData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TStateData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TStateData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TStateData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TStateData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TStateData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TStateData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TStateData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TStateData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TStateData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TStateData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TStateData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NYql.NDqProto.DqCheckpoint.TStateData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code NYql.NDqProto.TStateData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NYql.NDqProto.TStateData)
        NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NYql.NDqProto.DqCheckpoint.TStateData.class, NYql.NDqProto.DqCheckpoint.TStateData.Builder.class);
      }

      // Construct using NYql.NDqProto.DqCheckpoint.TStateData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        stateCase_ = 0;
        state_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TStateData_descriptor;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TStateData getDefaultInstanceForType() {
        return NYql.NDqProto.DqCheckpoint.TStateData.getDefaultInstance();
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TStateData build() {
        NYql.NDqProto.DqCheckpoint.TStateData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TStateData buildPartial() {
        NYql.NDqProto.DqCheckpoint.TStateData result = new NYql.NDqProto.DqCheckpoint.TStateData(this);
        if (stateCase_ == 1) {
          if (stateIdBuilder_ == null) {
            result.state_ = state_;
          } else {
            result.state_ = stateIdBuilder_.build();
          }
        }
        if (stateCase_ == 2) {
          if (stateDataBuilder_ == null) {
            result.state_ = state_;
          } else {
            result.state_ = stateDataBuilder_.build();
          }
        }
        result.stateCase_ = stateCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NYql.NDqProto.DqCheckpoint.TStateData) {
          return mergeFrom((NYql.NDqProto.DqCheckpoint.TStateData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NYql.NDqProto.DqCheckpoint.TStateData other) {
        if (other == NYql.NDqProto.DqCheckpoint.TStateData.getDefaultInstance()) return this;
        switch (other.getStateCase()) {
          case STATEID: {
            mergeStateId(other.getStateId());
            break;
          }
          case STATEDATA: {
            mergeStateData(other.getStateData());
            break;
          }
          case STATE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NYql.NDqProto.DqCheckpoint.TStateData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NYql.NDqProto.DqCheckpoint.TStateData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int stateCase_ = 0;
      private java.lang.Object state_;
      public StateCase
          getStateCase() {
        return StateCase.forNumber(
            stateCase_);
      }

      public Builder clearState() {
        stateCase_ = 0;
        state_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId, NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.Builder, NYql.NDqProto.DqCheckpoint.TStateData.TExtStateIdOrBuilder> stateIdBuilder_;
      /**
       * <pre>
       * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
       * @return Whether the stateId field is set.
       */
      @java.lang.Override
      public boolean hasStateId() {
        return stateCase_ == 1;
      }
      /**
       * <pre>
       * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
       * @return The stateId.
       */
      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId getStateId() {
        if (stateIdBuilder_ == null) {
          if (stateCase_ == 1) {
            return (NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) state_;
          }
          return NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.getDefaultInstance();
        } else {
          if (stateCase_ == 1) {
            return stateIdBuilder_.getMessage();
          }
          return NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
       */
      public Builder setStateId(NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId value) {
        if (stateIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateIdBuilder_.setMessage(value);
        }
        stateCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
       */
      public Builder setStateId(
          NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.Builder builderForValue) {
        if (stateIdBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateIdBuilder_.setMessage(builderForValue.build());
        }
        stateCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
       */
      public Builder mergeStateId(NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId value) {
        if (stateIdBuilder_ == null) {
          if (stateCase_ == 1 &&
              state_ != NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.getDefaultInstance()) {
            state_ = NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.newBuilder((NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) state_)
                .mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          if (stateCase_ == 1) {
            stateIdBuilder_.mergeFrom(value);
          }
          stateIdBuilder_.setMessage(value);
        }
        stateCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
       */
      public Builder clearStateId() {
        if (stateIdBuilder_ == null) {
          if (stateCase_ == 1) {
            stateCase_ = 0;
            state_ = null;
            onChanged();
          }
        } else {
          if (stateCase_ == 1) {
            stateCase_ = 0;
            state_ = null;
          }
          stateIdBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.Builder getStateIdBuilder() {
        return getStateIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
       */
      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TStateData.TExtStateIdOrBuilder getStateIdOrBuilder() {
        if ((stateCase_ == 1) && (stateIdBuilder_ != null)) {
          return stateIdBuilder_.getMessageOrBuilder();
        } else {
          if (stateCase_ == 1) {
            return (NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) state_;
          }
          return NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Unique (for TComputeActorCheckpoint) state id for big blobs. // TODO: implement
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TExtStateId StateId = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId, NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.Builder, NYql.NDqProto.DqCheckpoint.TStateData.TExtStateIdOrBuilder> 
          getStateIdFieldBuilder() {
        if (stateIdBuilder_ == null) {
          if (!(stateCase_ == 1)) {
            state_ = NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.getDefaultInstance();
          }
          stateIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId, NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId.Builder, NYql.NDqProto.DqCheckpoint.TStateData.TExtStateIdOrBuilder>(
                  (NYql.NDqProto.DqCheckpoint.TStateData.TExtStateId) state_,
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        stateCase_ = 1;
        onChanged();;
        return stateIdBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TStateData.TData, NYql.NDqProto.DqCheckpoint.TStateData.TData.Builder, NYql.NDqProto.DqCheckpoint.TStateData.TDataOrBuilder> stateDataBuilder_;
      /**
       * <pre>
       * In-place blob data for small blobs
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
       * @return Whether the stateData field is set.
       */
      @java.lang.Override
      public boolean hasStateData() {
        return stateCase_ == 2;
      }
      /**
       * <pre>
       * In-place blob data for small blobs
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
       * @return The stateData.
       */
      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TStateData.TData getStateData() {
        if (stateDataBuilder_ == null) {
          if (stateCase_ == 2) {
            return (NYql.NDqProto.DqCheckpoint.TStateData.TData) state_;
          }
          return NYql.NDqProto.DqCheckpoint.TStateData.TData.getDefaultInstance();
        } else {
          if (stateCase_ == 2) {
            return stateDataBuilder_.getMessage();
          }
          return NYql.NDqProto.DqCheckpoint.TStateData.TData.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * In-place blob data for small blobs
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
       */
      public Builder setStateData(NYql.NDqProto.DqCheckpoint.TStateData.TData value) {
        if (stateDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateDataBuilder_.setMessage(value);
        }
        stateCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * In-place blob data for small blobs
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
       */
      public Builder setStateData(
          NYql.NDqProto.DqCheckpoint.TStateData.TData.Builder builderForValue) {
        if (stateDataBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateDataBuilder_.setMessage(builderForValue.build());
        }
        stateCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * In-place blob data for small blobs
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
       */
      public Builder mergeStateData(NYql.NDqProto.DqCheckpoint.TStateData.TData value) {
        if (stateDataBuilder_ == null) {
          if (stateCase_ == 2 &&
              state_ != NYql.NDqProto.DqCheckpoint.TStateData.TData.getDefaultInstance()) {
            state_ = NYql.NDqProto.DqCheckpoint.TStateData.TData.newBuilder((NYql.NDqProto.DqCheckpoint.TStateData.TData) state_)
                .mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          if (stateCase_ == 2) {
            stateDataBuilder_.mergeFrom(value);
          }
          stateDataBuilder_.setMessage(value);
        }
        stateCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * In-place blob data for small blobs
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
       */
      public Builder clearStateData() {
        if (stateDataBuilder_ == null) {
          if (stateCase_ == 2) {
            stateCase_ = 0;
            state_ = null;
            onChanged();
          }
        } else {
          if (stateCase_ == 2) {
            stateCase_ = 0;
            state_ = null;
          }
          stateDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * In-place blob data for small blobs
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TStateData.TData.Builder getStateDataBuilder() {
        return getStateDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * In-place blob data for small blobs
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
       */
      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TStateData.TDataOrBuilder getStateDataOrBuilder() {
        if ((stateCase_ == 2) && (stateDataBuilder_ != null)) {
          return stateDataBuilder_.getMessageOrBuilder();
        } else {
          if (stateCase_ == 2) {
            return (NYql.NDqProto.DqCheckpoint.TStateData.TData) state_;
          }
          return NYql.NDqProto.DqCheckpoint.TStateData.TData.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * In-place blob data for small blobs
       * </pre>
       *
       * <code>.NYql.NDqProto.TStateData.TData StateData = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TStateData.TData, NYql.NDqProto.DqCheckpoint.TStateData.TData.Builder, NYql.NDqProto.DqCheckpoint.TStateData.TDataOrBuilder> 
          getStateDataFieldBuilder() {
        if (stateDataBuilder_ == null) {
          if (!(stateCase_ == 2)) {
            state_ = NYql.NDqProto.DqCheckpoint.TStateData.TData.getDefaultInstance();
          }
          stateDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              NYql.NDqProto.DqCheckpoint.TStateData.TData, NYql.NDqProto.DqCheckpoint.TStateData.TData.Builder, NYql.NDqProto.DqCheckpoint.TStateData.TDataOrBuilder>(
                  (NYql.NDqProto.DqCheckpoint.TStateData.TData) state_,
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        stateCase_ = 2;
        onChanged();;
        return stateDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NYql.NDqProto.TStateData)
    }

    // @@protoc_insertion_point(class_scope:NYql.NDqProto.TStateData)
    private static final NYql.NDqProto.DqCheckpoint.TStateData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NYql.NDqProto.DqCheckpoint.TStateData();
    }

    public static NYql.NDqProto.DqCheckpoint.TStateData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TStateData>
        PARSER = new com.google.protobuf.AbstractParser<TStateData>() {
      @java.lang.Override
      public TStateData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TStateData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TStateData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TStateData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TStateData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TSourceStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NYql.NDqProto.TSourceState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * State data for source.
     * Typically there is only one element with state that
     * source saved. But when we are migrating states
     * between tasks there can be state
     * from several different tasks sources.
     * </pre>
     *
     * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
     */
    java.util.List<NYql.NDqProto.DqCheckpoint.TStateData> 
        getDataList();
    /**
     * <pre>
     * State data for source.
     * Typically there is only one element with state that
     * source saved. But when we are migrating states
     * between tasks there can be state
     * from several different tasks sources.
     * </pre>
     *
     * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
     */
    NYql.NDqProto.DqCheckpoint.TStateData getData(int index);
    /**
     * <pre>
     * State data for source.
     * Typically there is only one element with state that
     * source saved. But when we are migrating states
     * between tasks there can be state
     * from several different tasks sources.
     * </pre>
     *
     * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
     */
    int getDataCount();
    /**
     * <pre>
     * State data for source.
     * Typically there is only one element with state that
     * source saved. But when we are migrating states
     * between tasks there can be state
     * from several different tasks sources.
     * </pre>
     *
     * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
     */
    java.util.List<? extends NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder> 
        getDataOrBuilderList();
    /**
     * <pre>
     * State data for source.
     * Typically there is only one element with state that
     * source saved. But when we are migrating states
     * between tasks there can be state
     * from several different tasks sources.
     * </pre>
     *
     * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
     */
    NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder getDataOrBuilder(
        int index);

    /**
     * <code>uint64 InputIndex = 2;</code>
     * @return The inputIndex.
     */
    long getInputIndex();
  }
  /**
   * Protobuf type {@code NYql.NDqProto.TSourceState}
   */
  public static final class TSourceState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NYql.NDqProto.TSourceState)
      TSourceStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TSourceState.newBuilder() to construct.
    private TSourceState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TSourceState() {
      data_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TSourceState();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TSourceState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                data_ = new java.util.ArrayList<NYql.NDqProto.DqCheckpoint.TStateData>();
                mutable_bitField0_ |= 0x00000001;
              }
              data_.add(
                  input.readMessage(NYql.NDqProto.DqCheckpoint.TStateData.parser(), extensionRegistry));
              break;
            }
            case 16: {

              inputIndex_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TSourceState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TSourceState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NYql.NDqProto.DqCheckpoint.TSourceState.class, NYql.NDqProto.DqCheckpoint.TSourceState.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private java.util.List<NYql.NDqProto.DqCheckpoint.TStateData> data_;
    /**
     * <pre>
     * State data for source.
     * Typically there is only one element with state that
     * source saved. But when we are migrating states
     * between tasks there can be state
     * from several different tasks sources.
     * </pre>
     *
     * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
     */
    @java.lang.Override
    public java.util.List<NYql.NDqProto.DqCheckpoint.TStateData> getDataList() {
      return data_;
    }
    /**
     * <pre>
     * State data for source.
     * Typically there is only one element with state that
     * source saved. But when we are migrating states
     * between tasks there can be state
     * from several different tasks sources.
     * </pre>
     *
     * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <pre>
     * State data for source.
     * Typically there is only one element with state that
     * source saved. But when we are migrating states
     * between tasks there can be state
     * from several different tasks sources.
     * </pre>
     *
     * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <pre>
     * State data for source.
     * Typically there is only one element with state that
     * source saved. But when we are migrating states
     * between tasks there can be state
     * from several different tasks sources.
     * </pre>
     *
     * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TStateData getData(int index) {
      return data_.get(index);
    }
    /**
     * <pre>
     * State data for source.
     * Typically there is only one element with state that
     * source saved. But when we are migrating states
     * between tasks there can be state
     * from several different tasks sources.
     * </pre>
     *
     * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    public static final int INPUTINDEX_FIELD_NUMBER = 2;
    private long inputIndex_;
    /**
     * <code>uint64 InputIndex = 2;</code>
     * @return The inputIndex.
     */
    @java.lang.Override
    public long getInputIndex() {
      return inputIndex_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(1, data_.get(i));
      }
      if (inputIndex_ != 0L) {
        output.writeUInt64(2, inputIndex_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, data_.get(i));
      }
      if (inputIndex_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, inputIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NYql.NDqProto.DqCheckpoint.TSourceState)) {
        return super.equals(obj);
      }
      NYql.NDqProto.DqCheckpoint.TSourceState other = (NYql.NDqProto.DqCheckpoint.TSourceState) obj;

      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (getInputIndex()
          != other.getInputIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (37 * hash) + INPUTINDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInputIndex());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NYql.NDqProto.DqCheckpoint.TSourceState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TSourceState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TSourceState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TSourceState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TSourceState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TSourceState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TSourceState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TSourceState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TSourceState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TSourceState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TSourceState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TSourceState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NYql.NDqProto.DqCheckpoint.TSourceState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code NYql.NDqProto.TSourceState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NYql.NDqProto.TSourceState)
        NYql.NDqProto.DqCheckpoint.TSourceStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TSourceState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TSourceState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NYql.NDqProto.DqCheckpoint.TSourceState.class, NYql.NDqProto.DqCheckpoint.TSourceState.Builder.class);
      }

      // Construct using NYql.NDqProto.DqCheckpoint.TSourceState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dataBuilder_.clear();
        }
        inputIndex_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TSourceState_descriptor;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TSourceState getDefaultInstanceForType() {
        return NYql.NDqProto.DqCheckpoint.TSourceState.getDefaultInstance();
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TSourceState build() {
        NYql.NDqProto.DqCheckpoint.TSourceState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TSourceState buildPartial() {
        NYql.NDqProto.DqCheckpoint.TSourceState result = new NYql.NDqProto.DqCheckpoint.TSourceState(this);
        int from_bitField0_ = bitField0_;
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.inputIndex_ = inputIndex_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NYql.NDqProto.DqCheckpoint.TSourceState) {
          return mergeFrom((NYql.NDqProto.DqCheckpoint.TSourceState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NYql.NDqProto.DqCheckpoint.TSourceState other) {
        if (other == NYql.NDqProto.DqCheckpoint.TSourceState.getDefaultInstance()) return this;
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        if (other.getInputIndex() != 0L) {
          setInputIndex(other.getInputIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NYql.NDqProto.DqCheckpoint.TSourceState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NYql.NDqProto.DqCheckpoint.TSourceState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<NYql.NDqProto.DqCheckpoint.TStateData> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          data_ = new java.util.ArrayList<NYql.NDqProto.DqCheckpoint.TStateData>(data_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TStateData, NYql.NDqProto.DqCheckpoint.TStateData.Builder, NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder> dataBuilder_;

      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public java.util.List<NYql.NDqProto.DqCheckpoint.TStateData> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TStateData getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder setData(
          int index, NYql.NDqProto.DqCheckpoint.TStateData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder setData(
          int index, NYql.NDqProto.DqCheckpoint.TStateData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder addData(NYql.NDqProto.DqCheckpoint.TStateData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder addData(
          int index, NYql.NDqProto.DqCheckpoint.TStateData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder addData(
          NYql.NDqProto.DqCheckpoint.TStateData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder addData(
          int index, NYql.NDqProto.DqCheckpoint.TStateData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends NYql.NDqProto.DqCheckpoint.TStateData> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TStateData.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public java.util.List<? extends NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TStateData.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            NYql.NDqProto.DqCheckpoint.TStateData.getDefaultInstance());
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TStateData.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, NYql.NDqProto.DqCheckpoint.TStateData.getDefaultInstance());
      }
      /**
       * <pre>
       * State data for source.
       * Typically there is only one element with state that
       * source saved. But when we are migrating states
       * between tasks there can be state
       * from several different tasks sources.
       * </pre>
       *
       * <code>repeated .NYql.NDqProto.TStateData Data = 1;</code>
       */
      public java.util.List<NYql.NDqProto.DqCheckpoint.TStateData.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TStateData, NYql.NDqProto.DqCheckpoint.TStateData.Builder, NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              NYql.NDqProto.DqCheckpoint.TStateData, NYql.NDqProto.DqCheckpoint.TStateData.Builder, NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private long inputIndex_ ;
      /**
       * <code>uint64 InputIndex = 2;</code>
       * @return The inputIndex.
       */
      @java.lang.Override
      public long getInputIndex() {
        return inputIndex_;
      }
      /**
       * <code>uint64 InputIndex = 2;</code>
       * @param value The inputIndex to set.
       * @return This builder for chaining.
       */
      public Builder setInputIndex(long value) {
        
        inputIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 InputIndex = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInputIndex() {
        
        inputIndex_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NYql.NDqProto.TSourceState)
    }

    // @@protoc_insertion_point(class_scope:NYql.NDqProto.TSourceState)
    private static final NYql.NDqProto.DqCheckpoint.TSourceState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NYql.NDqProto.DqCheckpoint.TSourceState();
    }

    public static NYql.NDqProto.DqCheckpoint.TSourceState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TSourceState>
        PARSER = new com.google.protobuf.AbstractParser<TSourceState>() {
      @java.lang.Override
      public TSourceState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TSourceState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TSourceState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TSourceState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TSourceState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TSinkStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NYql.NDqProto.TSinkState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     * @return The data.
     */
    NYql.NDqProto.DqCheckpoint.TStateData getData();
    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     */
    NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder getDataOrBuilder();

    /**
     * <code>uint64 OutputIndex = 2;</code>
     * @return The outputIndex.
     */
    long getOutputIndex();
  }
  /**
   * Protobuf type {@code NYql.NDqProto.TSinkState}
   */
  public static final class TSinkState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NYql.NDqProto.TSinkState)
      TSinkStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TSinkState.newBuilder() to construct.
    private TSinkState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TSinkState() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TSinkState();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TSinkState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              NYql.NDqProto.DqCheckpoint.TStateData.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(NYql.NDqProto.DqCheckpoint.TStateData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              outputIndex_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TSinkState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TSinkState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NYql.NDqProto.DqCheckpoint.TSinkState.class, NYql.NDqProto.DqCheckpoint.TSinkState.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private NYql.NDqProto.DqCheckpoint.TStateData data_;
    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TStateData getData() {
      return data_ == null ? NYql.NDqProto.DqCheckpoint.TStateData.getDefaultInstance() : data_;
    }
    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder getDataOrBuilder() {
      return getData();
    }

    public static final int OUTPUTINDEX_FIELD_NUMBER = 2;
    private long outputIndex_;
    /**
     * <code>uint64 OutputIndex = 2;</code>
     * @return The outputIndex.
     */
    @java.lang.Override
    public long getOutputIndex() {
      return outputIndex_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (data_ != null) {
        output.writeMessage(1, getData());
      }
      if (outputIndex_ != 0L) {
        output.writeUInt64(2, outputIndex_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getData());
      }
      if (outputIndex_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, outputIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NYql.NDqProto.DqCheckpoint.TSinkState)) {
        return super.equals(obj);
      }
      NYql.NDqProto.DqCheckpoint.TSinkState other = (NYql.NDqProto.DqCheckpoint.TSinkState) obj;

      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (getOutputIndex()
          != other.getOutputIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (37 * hash) + OUTPUTINDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOutputIndex());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NYql.NDqProto.DqCheckpoint.TSinkState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TSinkState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TSinkState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TSinkState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TSinkState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TSinkState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TSinkState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TSinkState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TSinkState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TSinkState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TSinkState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TSinkState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NYql.NDqProto.DqCheckpoint.TSinkState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code NYql.NDqProto.TSinkState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NYql.NDqProto.TSinkState)
        NYql.NDqProto.DqCheckpoint.TSinkStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TSinkState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TSinkState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NYql.NDqProto.DqCheckpoint.TSinkState.class, NYql.NDqProto.DqCheckpoint.TSinkState.Builder.class);
      }

      // Construct using NYql.NDqProto.DqCheckpoint.TSinkState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        outputIndex_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TSinkState_descriptor;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TSinkState getDefaultInstanceForType() {
        return NYql.NDqProto.DqCheckpoint.TSinkState.getDefaultInstance();
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TSinkState build() {
        NYql.NDqProto.DqCheckpoint.TSinkState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TSinkState buildPartial() {
        NYql.NDqProto.DqCheckpoint.TSinkState result = new NYql.NDqProto.DqCheckpoint.TSinkState(this);
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.outputIndex_ = outputIndex_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NYql.NDqProto.DqCheckpoint.TSinkState) {
          return mergeFrom((NYql.NDqProto.DqCheckpoint.TSinkState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NYql.NDqProto.DqCheckpoint.TSinkState other) {
        if (other == NYql.NDqProto.DqCheckpoint.TSinkState.getDefaultInstance()) return this;
        if (other.hasData()) {
          mergeData(other.getData());
        }
        if (other.getOutputIndex() != 0L) {
          setOutputIndex(other.getOutputIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NYql.NDqProto.DqCheckpoint.TSinkState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NYql.NDqProto.DqCheckpoint.TSinkState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private NYql.NDqProto.DqCheckpoint.TStateData data_;
      private com.google.protobuf.SingleFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TStateData, NYql.NDqProto.DqCheckpoint.TStateData.Builder, NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder> dataBuilder_;
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       * @return Whether the data field is set.
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       * @return The data.
       */
      public NYql.NDqProto.DqCheckpoint.TStateData getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? NYql.NDqProto.DqCheckpoint.TStateData.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder setData(NYql.NDqProto.DqCheckpoint.TStateData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder setData(
          NYql.NDqProto.DqCheckpoint.TStateData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder mergeData(NYql.NDqProto.DqCheckpoint.TStateData value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              NYql.NDqProto.DqCheckpoint.TStateData.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TStateData.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              NYql.NDqProto.DqCheckpoint.TStateData.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TStateData, NYql.NDqProto.DqCheckpoint.TStateData.Builder, NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              NYql.NDqProto.DqCheckpoint.TStateData, NYql.NDqProto.DqCheckpoint.TStateData.Builder, NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private long outputIndex_ ;
      /**
       * <code>uint64 OutputIndex = 2;</code>
       * @return The outputIndex.
       */
      @java.lang.Override
      public long getOutputIndex() {
        return outputIndex_;
      }
      /**
       * <code>uint64 OutputIndex = 2;</code>
       * @param value The outputIndex to set.
       * @return This builder for chaining.
       */
      public Builder setOutputIndex(long value) {
        
        outputIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 OutputIndex = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputIndex() {
        
        outputIndex_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NYql.NDqProto.TSinkState)
    }

    // @@protoc_insertion_point(class_scope:NYql.NDqProto.TSinkState)
    private static final NYql.NDqProto.DqCheckpoint.TSinkState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NYql.NDqProto.DqCheckpoint.TSinkState();
    }

    public static NYql.NDqProto.DqCheckpoint.TSinkState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TSinkState>
        PARSER = new com.google.protobuf.AbstractParser<TSinkState>() {
      @java.lang.Override
      public TSinkState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TSinkState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TSinkState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TSinkState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TSinkState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TMiniKqlProgramStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NYql.NDqProto.TMiniKqlProgramState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     * @return The data.
     */
    NYql.NDqProto.DqCheckpoint.TStateData getData();
    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     */
    NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder getDataOrBuilder();

    /**
     * <code>uint64 RuntimeVersion = 2;</code>
     * @return The runtimeVersion.
     */
    long getRuntimeVersion();
  }
  /**
   * Protobuf type {@code NYql.NDqProto.TMiniKqlProgramState}
   */
  public static final class TMiniKqlProgramState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NYql.NDqProto.TMiniKqlProgramState)
      TMiniKqlProgramStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TMiniKqlProgramState.newBuilder() to construct.
    private TMiniKqlProgramState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TMiniKqlProgramState() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TMiniKqlProgramState();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TMiniKqlProgramState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              NYql.NDqProto.DqCheckpoint.TStateData.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(NYql.NDqProto.DqCheckpoint.TStateData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              runtimeVersion_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TMiniKqlProgramState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TMiniKqlProgramState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.class, NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private NYql.NDqProto.DqCheckpoint.TStateData data_;
    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TStateData getData() {
      return data_ == null ? NYql.NDqProto.DqCheckpoint.TStateData.getDefaultInstance() : data_;
    }
    /**
     * <code>.NYql.NDqProto.TStateData Data = 1;</code>
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder getDataOrBuilder() {
      return getData();
    }

    public static final int RUNTIMEVERSION_FIELD_NUMBER = 2;
    private long runtimeVersion_;
    /**
     * <code>uint64 RuntimeVersion = 2;</code>
     * @return The runtimeVersion.
     */
    @java.lang.Override
    public long getRuntimeVersion() {
      return runtimeVersion_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (data_ != null) {
        output.writeMessage(1, getData());
      }
      if (runtimeVersion_ != 0L) {
        output.writeUInt64(2, runtimeVersion_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getData());
      }
      if (runtimeVersion_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, runtimeVersion_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState)) {
        return super.equals(obj);
      }
      NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState other = (NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState) obj;

      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (getRuntimeVersion()
          != other.getRuntimeVersion()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (37 * hash) + RUNTIMEVERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRuntimeVersion());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code NYql.NDqProto.TMiniKqlProgramState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NYql.NDqProto.TMiniKqlProgramState)
        NYql.NDqProto.DqCheckpoint.TMiniKqlProgramStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TMiniKqlProgramState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TMiniKqlProgramState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.class, NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.Builder.class);
      }

      // Construct using NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        runtimeVersion_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TMiniKqlProgramState_descriptor;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState getDefaultInstanceForType() {
        return NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.getDefaultInstance();
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState build() {
        NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState buildPartial() {
        NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState result = new NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState(this);
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.runtimeVersion_ = runtimeVersion_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState) {
          return mergeFrom((NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState other) {
        if (other == NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.getDefaultInstance()) return this;
        if (other.hasData()) {
          mergeData(other.getData());
        }
        if (other.getRuntimeVersion() != 0L) {
          setRuntimeVersion(other.getRuntimeVersion());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private NYql.NDqProto.DqCheckpoint.TStateData data_;
      private com.google.protobuf.SingleFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TStateData, NYql.NDqProto.DqCheckpoint.TStateData.Builder, NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder> dataBuilder_;
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       * @return Whether the data field is set.
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       * @return The data.
       */
      public NYql.NDqProto.DqCheckpoint.TStateData getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? NYql.NDqProto.DqCheckpoint.TStateData.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder setData(NYql.NDqProto.DqCheckpoint.TStateData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder setData(
          NYql.NDqProto.DqCheckpoint.TStateData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder mergeData(NYql.NDqProto.DqCheckpoint.TStateData value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              NYql.NDqProto.DqCheckpoint.TStateData.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TStateData.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              NYql.NDqProto.DqCheckpoint.TStateData.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>.NYql.NDqProto.TStateData Data = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TStateData, NYql.NDqProto.DqCheckpoint.TStateData.Builder, NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              NYql.NDqProto.DqCheckpoint.TStateData, NYql.NDqProto.DqCheckpoint.TStateData.Builder, NYql.NDqProto.DqCheckpoint.TStateDataOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private long runtimeVersion_ ;
      /**
       * <code>uint64 RuntimeVersion = 2;</code>
       * @return The runtimeVersion.
       */
      @java.lang.Override
      public long getRuntimeVersion() {
        return runtimeVersion_;
      }
      /**
       * <code>uint64 RuntimeVersion = 2;</code>
       * @param value The runtimeVersion to set.
       * @return This builder for chaining.
       */
      public Builder setRuntimeVersion(long value) {
        
        runtimeVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 RuntimeVersion = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRuntimeVersion() {
        
        runtimeVersion_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NYql.NDqProto.TMiniKqlProgramState)
    }

    // @@protoc_insertion_point(class_scope:NYql.NDqProto.TMiniKqlProgramState)
    private static final NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState();
    }

    public static NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TMiniKqlProgramState>
        PARSER = new com.google.protobuf.AbstractParser<TMiniKqlProgramState>() {
      @java.lang.Override
      public TMiniKqlProgramState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TMiniKqlProgramState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TMiniKqlProgramState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TMiniKqlProgramState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TComputeActorStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NYql.NDqProto.TComputeActorState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
     * @return Whether the miniKqlProgram field is set.
     */
    boolean hasMiniKqlProgram();
    /**
     * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
     * @return The miniKqlProgram.
     */
    NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState getMiniKqlProgram();
    /**
     * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
     */
    NYql.NDqProto.DqCheckpoint.TMiniKqlProgramStateOrBuilder getMiniKqlProgramOrBuilder();

    /**
     * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
     */
    java.util.List<NYql.NDqProto.DqCheckpoint.TSourceState> 
        getSourcesList();
    /**
     * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
     */
    NYql.NDqProto.DqCheckpoint.TSourceState getSources(int index);
    /**
     * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
     */
    int getSourcesCount();
    /**
     * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
     */
    java.util.List<? extends NYql.NDqProto.DqCheckpoint.TSourceStateOrBuilder> 
        getSourcesOrBuilderList();
    /**
     * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
     */
    NYql.NDqProto.DqCheckpoint.TSourceStateOrBuilder getSourcesOrBuilder(
        int index);

    /**
     * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
     */
    java.util.List<NYql.NDqProto.DqCheckpoint.TSinkState> 
        getSinksList();
    /**
     * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
     */
    NYql.NDqProto.DqCheckpoint.TSinkState getSinks(int index);
    /**
     * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
     */
    int getSinksCount();
    /**
     * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
     */
    java.util.List<? extends NYql.NDqProto.DqCheckpoint.TSinkStateOrBuilder> 
        getSinksOrBuilderList();
    /**
     * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
     */
    NYql.NDqProto.DqCheckpoint.TSinkStateOrBuilder getSinksOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Checkpoint for single compute actor.
   * </pre>
   *
   * Protobuf type {@code NYql.NDqProto.TComputeActorState}
   */
  public static final class TComputeActorState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NYql.NDqProto.TComputeActorState)
      TComputeActorStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TComputeActorState.newBuilder() to construct.
    private TComputeActorState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TComputeActorState() {
      sources_ = java.util.Collections.emptyList();
      sinks_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TComputeActorState();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TComputeActorState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.Builder subBuilder = null;
              if (miniKqlProgram_ != null) {
                subBuilder = miniKqlProgram_.toBuilder();
              }
              miniKqlProgram_ = input.readMessage(NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(miniKqlProgram_);
                miniKqlProgram_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                sources_ = new java.util.ArrayList<NYql.NDqProto.DqCheckpoint.TSourceState>();
                mutable_bitField0_ |= 0x00000001;
              }
              sources_.add(
                  input.readMessage(NYql.NDqProto.DqCheckpoint.TSourceState.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                sinks_ = new java.util.ArrayList<NYql.NDqProto.DqCheckpoint.TSinkState>();
                mutable_bitField0_ |= 0x00000002;
              }
              sinks_.add(
                  input.readMessage(NYql.NDqProto.DqCheckpoint.TSinkState.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          sources_ = java.util.Collections.unmodifiableList(sources_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          sinks_ = java.util.Collections.unmodifiableList(sinks_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TComputeActorState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TComputeActorState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NYql.NDqProto.DqCheckpoint.TComputeActorState.class, NYql.NDqProto.DqCheckpoint.TComputeActorState.Builder.class);
    }

    public static final int MINIKQLPROGRAM_FIELD_NUMBER = 1;
    private NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState miniKqlProgram_;
    /**
     * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
     * @return Whether the miniKqlProgram field is set.
     */
    @java.lang.Override
    public boolean hasMiniKqlProgram() {
      return miniKqlProgram_ != null;
    }
    /**
     * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
     * @return The miniKqlProgram.
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState getMiniKqlProgram() {
      return miniKqlProgram_ == null ? NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.getDefaultInstance() : miniKqlProgram_;
    }
    /**
     * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TMiniKqlProgramStateOrBuilder getMiniKqlProgramOrBuilder() {
      return getMiniKqlProgram();
    }

    public static final int SOURCES_FIELD_NUMBER = 2;
    private java.util.List<NYql.NDqProto.DqCheckpoint.TSourceState> sources_;
    /**
     * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
     */
    @java.lang.Override
    public java.util.List<NYql.NDqProto.DqCheckpoint.TSourceState> getSourcesList() {
      return sources_;
    }
    /**
     * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends NYql.NDqProto.DqCheckpoint.TSourceStateOrBuilder> 
        getSourcesOrBuilderList() {
      return sources_;
    }
    /**
     * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
     */
    @java.lang.Override
    public int getSourcesCount() {
      return sources_.size();
    }
    /**
     * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TSourceState getSources(int index) {
      return sources_.get(index);
    }
    /**
     * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TSourceStateOrBuilder getSourcesOrBuilder(
        int index) {
      return sources_.get(index);
    }

    public static final int SINKS_FIELD_NUMBER = 3;
    private java.util.List<NYql.NDqProto.DqCheckpoint.TSinkState> sinks_;
    /**
     * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
     */
    @java.lang.Override
    public java.util.List<NYql.NDqProto.DqCheckpoint.TSinkState> getSinksList() {
      return sinks_;
    }
    /**
     * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends NYql.NDqProto.DqCheckpoint.TSinkStateOrBuilder> 
        getSinksOrBuilderList() {
      return sinks_;
    }
    /**
     * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
     */
    @java.lang.Override
    public int getSinksCount() {
      return sinks_.size();
    }
    /**
     * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TSinkState getSinks(int index) {
      return sinks_.get(index);
    }
    /**
     * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
     */
    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TSinkStateOrBuilder getSinksOrBuilder(
        int index) {
      return sinks_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (miniKqlProgram_ != null) {
        output.writeMessage(1, getMiniKqlProgram());
      }
      for (int i = 0; i < sources_.size(); i++) {
        output.writeMessage(2, sources_.get(i));
      }
      for (int i = 0; i < sinks_.size(); i++) {
        output.writeMessage(3, sinks_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (miniKqlProgram_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMiniKqlProgram());
      }
      for (int i = 0; i < sources_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sources_.get(i));
      }
      for (int i = 0; i < sinks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, sinks_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NYql.NDqProto.DqCheckpoint.TComputeActorState)) {
        return super.equals(obj);
      }
      NYql.NDqProto.DqCheckpoint.TComputeActorState other = (NYql.NDqProto.DqCheckpoint.TComputeActorState) obj;

      if (hasMiniKqlProgram() != other.hasMiniKqlProgram()) return false;
      if (hasMiniKqlProgram()) {
        if (!getMiniKqlProgram()
            .equals(other.getMiniKqlProgram())) return false;
      }
      if (!getSourcesList()
          .equals(other.getSourcesList())) return false;
      if (!getSinksList()
          .equals(other.getSinksList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMiniKqlProgram()) {
        hash = (37 * hash) + MINIKQLPROGRAM_FIELD_NUMBER;
        hash = (53 * hash) + getMiniKqlProgram().hashCode();
      }
      if (getSourcesCount() > 0) {
        hash = (37 * hash) + SOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getSourcesList().hashCode();
      }
      if (getSinksCount() > 0) {
        hash = (37 * hash) + SINKS_FIELD_NUMBER;
        hash = (53 * hash) + getSinksList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NYql.NDqProto.DqCheckpoint.TComputeActorState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NYql.NDqProto.DqCheckpoint.TComputeActorState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Checkpoint for single compute actor.
     * </pre>
     *
     * Protobuf type {@code NYql.NDqProto.TComputeActorState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NYql.NDqProto.TComputeActorState)
        NYql.NDqProto.DqCheckpoint.TComputeActorStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TComputeActorState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TComputeActorState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NYql.NDqProto.DqCheckpoint.TComputeActorState.class, NYql.NDqProto.DqCheckpoint.TComputeActorState.Builder.class);
      }

      // Construct using NYql.NDqProto.DqCheckpoint.TComputeActorState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSourcesFieldBuilder();
          getSinksFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (miniKqlProgramBuilder_ == null) {
          miniKqlProgram_ = null;
        } else {
          miniKqlProgram_ = null;
          miniKqlProgramBuilder_ = null;
        }
        if (sourcesBuilder_ == null) {
          sources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          sourcesBuilder_.clear();
        }
        if (sinksBuilder_ == null) {
          sinks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sinksBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return NYql.NDqProto.DqCheckpoint.internal_static_NYql_NDqProto_TComputeActorState_descriptor;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TComputeActorState getDefaultInstanceForType() {
        return NYql.NDqProto.DqCheckpoint.TComputeActorState.getDefaultInstance();
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TComputeActorState build() {
        NYql.NDqProto.DqCheckpoint.TComputeActorState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public NYql.NDqProto.DqCheckpoint.TComputeActorState buildPartial() {
        NYql.NDqProto.DqCheckpoint.TComputeActorState result = new NYql.NDqProto.DqCheckpoint.TComputeActorState(this);
        int from_bitField0_ = bitField0_;
        if (miniKqlProgramBuilder_ == null) {
          result.miniKqlProgram_ = miniKqlProgram_;
        } else {
          result.miniKqlProgram_ = miniKqlProgramBuilder_.build();
        }
        if (sourcesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            sources_ = java.util.Collections.unmodifiableList(sources_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.sources_ = sources_;
        } else {
          result.sources_ = sourcesBuilder_.build();
        }
        if (sinksBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            sinks_ = java.util.Collections.unmodifiableList(sinks_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sinks_ = sinks_;
        } else {
          result.sinks_ = sinksBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NYql.NDqProto.DqCheckpoint.TComputeActorState) {
          return mergeFrom((NYql.NDqProto.DqCheckpoint.TComputeActorState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NYql.NDqProto.DqCheckpoint.TComputeActorState other) {
        if (other == NYql.NDqProto.DqCheckpoint.TComputeActorState.getDefaultInstance()) return this;
        if (other.hasMiniKqlProgram()) {
          mergeMiniKqlProgram(other.getMiniKqlProgram());
        }
        if (sourcesBuilder_ == null) {
          if (!other.sources_.isEmpty()) {
            if (sources_.isEmpty()) {
              sources_ = other.sources_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSourcesIsMutable();
              sources_.addAll(other.sources_);
            }
            onChanged();
          }
        } else {
          if (!other.sources_.isEmpty()) {
            if (sourcesBuilder_.isEmpty()) {
              sourcesBuilder_.dispose();
              sourcesBuilder_ = null;
              sources_ = other.sources_;
              bitField0_ = (bitField0_ & ~0x00000001);
              sourcesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSourcesFieldBuilder() : null;
            } else {
              sourcesBuilder_.addAllMessages(other.sources_);
            }
          }
        }
        if (sinksBuilder_ == null) {
          if (!other.sinks_.isEmpty()) {
            if (sinks_.isEmpty()) {
              sinks_ = other.sinks_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSinksIsMutable();
              sinks_.addAll(other.sinks_);
            }
            onChanged();
          }
        } else {
          if (!other.sinks_.isEmpty()) {
            if (sinksBuilder_.isEmpty()) {
              sinksBuilder_.dispose();
              sinksBuilder_ = null;
              sinks_ = other.sinks_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sinksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSinksFieldBuilder() : null;
            } else {
              sinksBuilder_.addAllMessages(other.sinks_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NYql.NDqProto.DqCheckpoint.TComputeActorState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NYql.NDqProto.DqCheckpoint.TComputeActorState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState miniKqlProgram_;
      private com.google.protobuf.SingleFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState, NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.Builder, NYql.NDqProto.DqCheckpoint.TMiniKqlProgramStateOrBuilder> miniKqlProgramBuilder_;
      /**
       * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
       * @return Whether the miniKqlProgram field is set.
       */
      public boolean hasMiniKqlProgram() {
        return miniKqlProgramBuilder_ != null || miniKqlProgram_ != null;
      }
      /**
       * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
       * @return The miniKqlProgram.
       */
      public NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState getMiniKqlProgram() {
        if (miniKqlProgramBuilder_ == null) {
          return miniKqlProgram_ == null ? NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.getDefaultInstance() : miniKqlProgram_;
        } else {
          return miniKqlProgramBuilder_.getMessage();
        }
      }
      /**
       * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
       */
      public Builder setMiniKqlProgram(NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState value) {
        if (miniKqlProgramBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          miniKqlProgram_ = value;
          onChanged();
        } else {
          miniKqlProgramBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
       */
      public Builder setMiniKqlProgram(
          NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.Builder builderForValue) {
        if (miniKqlProgramBuilder_ == null) {
          miniKqlProgram_ = builderForValue.build();
          onChanged();
        } else {
          miniKqlProgramBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
       */
      public Builder mergeMiniKqlProgram(NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState value) {
        if (miniKqlProgramBuilder_ == null) {
          if (miniKqlProgram_ != null) {
            miniKqlProgram_ =
              NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.newBuilder(miniKqlProgram_).mergeFrom(value).buildPartial();
          } else {
            miniKqlProgram_ = value;
          }
          onChanged();
        } else {
          miniKqlProgramBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
       */
      public Builder clearMiniKqlProgram() {
        if (miniKqlProgramBuilder_ == null) {
          miniKqlProgram_ = null;
          onChanged();
        } else {
          miniKqlProgram_ = null;
          miniKqlProgramBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.Builder getMiniKqlProgramBuilder() {
        
        onChanged();
        return getMiniKqlProgramFieldBuilder().getBuilder();
      }
      /**
       * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TMiniKqlProgramStateOrBuilder getMiniKqlProgramOrBuilder() {
        if (miniKqlProgramBuilder_ != null) {
          return miniKqlProgramBuilder_.getMessageOrBuilder();
        } else {
          return miniKqlProgram_ == null ?
              NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.getDefaultInstance() : miniKqlProgram_;
        }
      }
      /**
       * <code>.NYql.NDqProto.TMiniKqlProgramState MiniKqlProgram = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState, NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.Builder, NYql.NDqProto.DqCheckpoint.TMiniKqlProgramStateOrBuilder> 
          getMiniKqlProgramFieldBuilder() {
        if (miniKqlProgramBuilder_ == null) {
          miniKqlProgramBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState, NYql.NDqProto.DqCheckpoint.TMiniKqlProgramState.Builder, NYql.NDqProto.DqCheckpoint.TMiniKqlProgramStateOrBuilder>(
                  getMiniKqlProgram(),
                  getParentForChildren(),
                  isClean());
          miniKqlProgram_ = null;
        }
        return miniKqlProgramBuilder_;
      }

      private java.util.List<NYql.NDqProto.DqCheckpoint.TSourceState> sources_ =
        java.util.Collections.emptyList();
      private void ensureSourcesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          sources_ = new java.util.ArrayList<NYql.NDqProto.DqCheckpoint.TSourceState>(sources_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TSourceState, NYql.NDqProto.DqCheckpoint.TSourceState.Builder, NYql.NDqProto.DqCheckpoint.TSourceStateOrBuilder> sourcesBuilder_;

      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public java.util.List<NYql.NDqProto.DqCheckpoint.TSourceState> getSourcesList() {
        if (sourcesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sources_);
        } else {
          return sourcesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public int getSourcesCount() {
        if (sourcesBuilder_ == null) {
          return sources_.size();
        } else {
          return sourcesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TSourceState getSources(int index) {
        if (sourcesBuilder_ == null) {
          return sources_.get(index);
        } else {
          return sourcesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public Builder setSources(
          int index, NYql.NDqProto.DqCheckpoint.TSourceState value) {
        if (sourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcesIsMutable();
          sources_.set(index, value);
          onChanged();
        } else {
          sourcesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public Builder setSources(
          int index, NYql.NDqProto.DqCheckpoint.TSourceState.Builder builderForValue) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.set(index, builderForValue.build());
          onChanged();
        } else {
          sourcesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public Builder addSources(NYql.NDqProto.DqCheckpoint.TSourceState value) {
        if (sourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcesIsMutable();
          sources_.add(value);
          onChanged();
        } else {
          sourcesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public Builder addSources(
          int index, NYql.NDqProto.DqCheckpoint.TSourceState value) {
        if (sourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcesIsMutable();
          sources_.add(index, value);
          onChanged();
        } else {
          sourcesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public Builder addSources(
          NYql.NDqProto.DqCheckpoint.TSourceState.Builder builderForValue) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.add(builderForValue.build());
          onChanged();
        } else {
          sourcesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public Builder addSources(
          int index, NYql.NDqProto.DqCheckpoint.TSourceState.Builder builderForValue) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.add(index, builderForValue.build());
          onChanged();
        } else {
          sourcesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public Builder addAllSources(
          java.lang.Iterable<? extends NYql.NDqProto.DqCheckpoint.TSourceState> values) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sources_);
          onChanged();
        } else {
          sourcesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public Builder clearSources() {
        if (sourcesBuilder_ == null) {
          sources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          sourcesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public Builder removeSources(int index) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.remove(index);
          onChanged();
        } else {
          sourcesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TSourceState.Builder getSourcesBuilder(
          int index) {
        return getSourcesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TSourceStateOrBuilder getSourcesOrBuilder(
          int index) {
        if (sourcesBuilder_ == null) {
          return sources_.get(index);  } else {
          return sourcesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public java.util.List<? extends NYql.NDqProto.DqCheckpoint.TSourceStateOrBuilder> 
           getSourcesOrBuilderList() {
        if (sourcesBuilder_ != null) {
          return sourcesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sources_);
        }
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TSourceState.Builder addSourcesBuilder() {
        return getSourcesFieldBuilder().addBuilder(
            NYql.NDqProto.DqCheckpoint.TSourceState.getDefaultInstance());
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TSourceState.Builder addSourcesBuilder(
          int index) {
        return getSourcesFieldBuilder().addBuilder(
            index, NYql.NDqProto.DqCheckpoint.TSourceState.getDefaultInstance());
      }
      /**
       * <code>repeated .NYql.NDqProto.TSourceState Sources = 2;</code>
       */
      public java.util.List<NYql.NDqProto.DqCheckpoint.TSourceState.Builder> 
           getSourcesBuilderList() {
        return getSourcesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TSourceState, NYql.NDqProto.DqCheckpoint.TSourceState.Builder, NYql.NDqProto.DqCheckpoint.TSourceStateOrBuilder> 
          getSourcesFieldBuilder() {
        if (sourcesBuilder_ == null) {
          sourcesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              NYql.NDqProto.DqCheckpoint.TSourceState, NYql.NDqProto.DqCheckpoint.TSourceState.Builder, NYql.NDqProto.DqCheckpoint.TSourceStateOrBuilder>(
                  sources_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          sources_ = null;
        }
        return sourcesBuilder_;
      }

      private java.util.List<NYql.NDqProto.DqCheckpoint.TSinkState> sinks_ =
        java.util.Collections.emptyList();
      private void ensureSinksIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          sinks_ = new java.util.ArrayList<NYql.NDqProto.DqCheckpoint.TSinkState>(sinks_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TSinkState, NYql.NDqProto.DqCheckpoint.TSinkState.Builder, NYql.NDqProto.DqCheckpoint.TSinkStateOrBuilder> sinksBuilder_;

      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public java.util.List<NYql.NDqProto.DqCheckpoint.TSinkState> getSinksList() {
        if (sinksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sinks_);
        } else {
          return sinksBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public int getSinksCount() {
        if (sinksBuilder_ == null) {
          return sinks_.size();
        } else {
          return sinksBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TSinkState getSinks(int index) {
        if (sinksBuilder_ == null) {
          return sinks_.get(index);
        } else {
          return sinksBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public Builder setSinks(
          int index, NYql.NDqProto.DqCheckpoint.TSinkState value) {
        if (sinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSinksIsMutable();
          sinks_.set(index, value);
          onChanged();
        } else {
          sinksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public Builder setSinks(
          int index, NYql.NDqProto.DqCheckpoint.TSinkState.Builder builderForValue) {
        if (sinksBuilder_ == null) {
          ensureSinksIsMutable();
          sinks_.set(index, builderForValue.build());
          onChanged();
        } else {
          sinksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public Builder addSinks(NYql.NDqProto.DqCheckpoint.TSinkState value) {
        if (sinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSinksIsMutable();
          sinks_.add(value);
          onChanged();
        } else {
          sinksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public Builder addSinks(
          int index, NYql.NDqProto.DqCheckpoint.TSinkState value) {
        if (sinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSinksIsMutable();
          sinks_.add(index, value);
          onChanged();
        } else {
          sinksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public Builder addSinks(
          NYql.NDqProto.DqCheckpoint.TSinkState.Builder builderForValue) {
        if (sinksBuilder_ == null) {
          ensureSinksIsMutable();
          sinks_.add(builderForValue.build());
          onChanged();
        } else {
          sinksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public Builder addSinks(
          int index, NYql.NDqProto.DqCheckpoint.TSinkState.Builder builderForValue) {
        if (sinksBuilder_ == null) {
          ensureSinksIsMutable();
          sinks_.add(index, builderForValue.build());
          onChanged();
        } else {
          sinksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public Builder addAllSinks(
          java.lang.Iterable<? extends NYql.NDqProto.DqCheckpoint.TSinkState> values) {
        if (sinksBuilder_ == null) {
          ensureSinksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sinks_);
          onChanged();
        } else {
          sinksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public Builder clearSinks() {
        if (sinksBuilder_ == null) {
          sinks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sinksBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public Builder removeSinks(int index) {
        if (sinksBuilder_ == null) {
          ensureSinksIsMutable();
          sinks_.remove(index);
          onChanged();
        } else {
          sinksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TSinkState.Builder getSinksBuilder(
          int index) {
        return getSinksFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TSinkStateOrBuilder getSinksOrBuilder(
          int index) {
        if (sinksBuilder_ == null) {
          return sinks_.get(index);  } else {
          return sinksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public java.util.List<? extends NYql.NDqProto.DqCheckpoint.TSinkStateOrBuilder> 
           getSinksOrBuilderList() {
        if (sinksBuilder_ != null) {
          return sinksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sinks_);
        }
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TSinkState.Builder addSinksBuilder() {
        return getSinksFieldBuilder().addBuilder(
            NYql.NDqProto.DqCheckpoint.TSinkState.getDefaultInstance());
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public NYql.NDqProto.DqCheckpoint.TSinkState.Builder addSinksBuilder(
          int index) {
        return getSinksFieldBuilder().addBuilder(
            index, NYql.NDqProto.DqCheckpoint.TSinkState.getDefaultInstance());
      }
      /**
       * <code>repeated .NYql.NDqProto.TSinkState Sinks = 3;</code>
       */
      public java.util.List<NYql.NDqProto.DqCheckpoint.TSinkState.Builder> 
           getSinksBuilderList() {
        return getSinksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          NYql.NDqProto.DqCheckpoint.TSinkState, NYql.NDqProto.DqCheckpoint.TSinkState.Builder, NYql.NDqProto.DqCheckpoint.TSinkStateOrBuilder> 
          getSinksFieldBuilder() {
        if (sinksBuilder_ == null) {
          sinksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              NYql.NDqProto.DqCheckpoint.TSinkState, NYql.NDqProto.DqCheckpoint.TSinkState.Builder, NYql.NDqProto.DqCheckpoint.TSinkStateOrBuilder>(
                  sinks_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          sinks_ = null;
        }
        return sinksBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NYql.NDqProto.TComputeActorState)
    }

    // @@protoc_insertion_point(class_scope:NYql.NDqProto.TComputeActorState)
    private static final NYql.NDqProto.DqCheckpoint.TComputeActorState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NYql.NDqProto.DqCheckpoint.TComputeActorState();
    }

    public static NYql.NDqProto.DqCheckpoint.TComputeActorState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TComputeActorState>
        PARSER = new com.google.protobuf.AbstractParser<TComputeActorState>() {
      @java.lang.Override
      public TComputeActorState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TComputeActorState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TComputeActorState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TComputeActorState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public NYql.NDqProto.DqCheckpoint.TComputeActorState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NYql_NDqProto_TStateData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NYql_NDqProto_TStateData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NYql_NDqProto_TStateData_TExtStateId_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NYql_NDqProto_TStateData_TExtStateId_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NYql_NDqProto_TStateData_TData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NYql_NDqProto_TStateData_TData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NYql_NDqProto_TSourceState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NYql_NDqProto_TSourceState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NYql_NDqProto_TSinkState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NYql_NDqProto_TSinkState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NYql_NDqProto_TMiniKqlProgramState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NYql_NDqProto_TMiniKqlProgramState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NYql_NDqProto_TComputeActorState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NYql_NDqProto_TComputeActorState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,ydb/library/yql/dq/proto/dq_checkpoint" +
      ".proto\022\rNYql.NDqProto\"\315\001\n\nTStateData\0228\n\007" +
      "StateId\030\001 \001(\0132%.NYql.NDqProto.TStateData" +
      ".TExtStateIdH\000\0224\n\tStateData\030\002 \001(\0132\037.NYql" +
      ".NDqProto.TStateData.TDataH\000\032\036\n\013TExtStat" +
      "eId\022\017\n\007StateId\030\001 \001(\r\032&\n\005TData\022\014\n\004Blob\030\001 " +
      "\001(\014\022\017\n\007Version\030\002 \001(\004B\007\n\005State\"K\n\014TSource" +
      "State\022\'\n\004Data\030\001 \003(\0132\031.NYql.NDqProto.TSta" +
      "teData\022\022\n\nInputIndex\030\002 \001(\004\"J\n\nTSinkState" +
      "\022\'\n\004Data\030\001 \001(\0132\031.NYql.NDqProto.TStateDat" +
      "a\022\023\n\013OutputIndex\030\002 \001(\004\"W\n\024TMiniKqlProgra" +
      "mState\022\'\n\004Data\030\001 \001(\0132\031.NYql.NDqProto.TSt" +
      "ateData\022\026\n\016RuntimeVersion\030\002 \001(\004\"\251\001\n\022TCom" +
      "puteActorState\022;\n\016MiniKqlProgram\030\001 \001(\0132#" +
      ".NYql.NDqProto.TMiniKqlProgramState\022,\n\007S" +
      "ources\030\002 \003(\0132\033.NYql.NDqProto.TSourceStat" +
      "e\022(\n\005Sinks\030\003 \003(\0132\031.NYql.NDqProto.TSinkSt" +
      "ateB\003\370\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_NYql_NDqProto_TStateData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_NYql_NDqProto_TStateData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NYql_NDqProto_TStateData_descriptor,
        new java.lang.String[] { "StateId", "StateData", "State", });
    internal_static_NYql_NDqProto_TStateData_TExtStateId_descriptor =
      internal_static_NYql_NDqProto_TStateData_descriptor.getNestedTypes().get(0);
    internal_static_NYql_NDqProto_TStateData_TExtStateId_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NYql_NDqProto_TStateData_TExtStateId_descriptor,
        new java.lang.String[] { "StateId", });
    internal_static_NYql_NDqProto_TStateData_TData_descriptor =
      internal_static_NYql_NDqProto_TStateData_descriptor.getNestedTypes().get(1);
    internal_static_NYql_NDqProto_TStateData_TData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NYql_NDqProto_TStateData_TData_descriptor,
        new java.lang.String[] { "Blob", "Version", });
    internal_static_NYql_NDqProto_TSourceState_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_NYql_NDqProto_TSourceState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NYql_NDqProto_TSourceState_descriptor,
        new java.lang.String[] { "Data", "InputIndex", });
    internal_static_NYql_NDqProto_TSinkState_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_NYql_NDqProto_TSinkState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NYql_NDqProto_TSinkState_descriptor,
        new java.lang.String[] { "Data", "OutputIndex", });
    internal_static_NYql_NDqProto_TMiniKqlProgramState_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_NYql_NDqProto_TMiniKqlProgramState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NYql_NDqProto_TMiniKqlProgramState_descriptor,
        new java.lang.String[] { "Data", "RuntimeVersion", });
    internal_static_NYql_NDqProto_TComputeActorState_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_NYql_NDqProto_TComputeActorState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NYql_NDqProto_TComputeActorState_descriptor,
        new java.lang.String[] { "MiniKqlProgram", "Sources", "Sinks", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
