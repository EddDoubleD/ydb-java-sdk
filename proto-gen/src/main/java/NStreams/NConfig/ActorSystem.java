// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kikimr/streaming/libs/config/proto/actor_system.proto

package NStreams.NConfig;

public final class ActorSystem {
  private ActorSystem() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TActorSystemConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NStreams.NConfig.TActorSystemConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
     */
    java.util.List<NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor> 
        getExecutorList();
    /**
     * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
     */
    NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor getExecutor(int index);
    /**
     * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
     */
    int getExecutorCount();
    /**
     * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
     */
    java.util.List<? extends NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutorOrBuilder> 
        getExecutorOrBuilderList();
    /**
     * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
     */
    NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutorOrBuilder getExecutorOrBuilder(
        int index);

    /**
     * <code>optional uint32 SystemExecutorPoolId = 10 [default = 0];</code>
     */
    boolean hasSystemExecutorPoolId();
    /**
     * <code>optional uint32 SystemExecutorPoolId = 10 [default = 0];</code>
     */
    int getSystemExecutorPoolId();

    /**
     * <code>optional uint32 UserExecutorPoolId = 11 [default = 1];</code>
     */
    boolean hasUserExecutorPoolId();
    /**
     * <code>optional uint32 UserExecutorPoolId = 11 [default = 1];</code>
     */
    int getUserExecutorPoolId();

    /**
     * <code>optional uint32 IoExecutorPoolId = 12 [default = 2];</code>
     */
    boolean hasIoExecutorPoolId();
    /**
     * <code>optional uint32 IoExecutorPoolId = 12 [default = 2];</code>
     */
    int getIoExecutorPoolId();

    /**
     * <code>optional uint32 BatchExecutorPoolId = 13 [default = 3];</code>
     */
    boolean hasBatchExecutorPoolId();
    /**
     * <code>optional uint32 BatchExecutorPoolId = 13 [default = 3];</code>
     */
    int getBatchExecutorPoolId();
  }
  /**
   * Protobuf type {@code NStreams.NConfig.TActorSystemConfig}
   */
  public  static final class TActorSystemConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NStreams.NConfig.TActorSystemConfig)
      TActorSystemConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TActorSystemConfig.newBuilder() to construct.
    private TActorSystemConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TActorSystemConfig() {
      executor_ = java.util.Collections.emptyList();
      systemExecutorPoolId_ = 0;
      userExecutorPoolId_ = 1;
      ioExecutorPoolId_ = 2;
      batchExecutorPoolId_ = 3;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TActorSystemConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                executor_ = new java.util.ArrayList<NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor>();
                mutable_bitField0_ |= 0x00000001;
              }
              executor_.add(
                  input.readMessage(NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              bitField0_ |= 0x00000001;
              systemExecutorPoolId_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000002;
              userExecutorPoolId_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000004;
              ioExecutorPoolId_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000008;
              batchExecutorPoolId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          executor_ = java.util.Collections.unmodifiableList(executor_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return NStreams.NConfig.ActorSystem.internal_static_NStreams_NConfig_TActorSystemConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return NStreams.NConfig.ActorSystem.internal_static_NStreams_NConfig_TActorSystemConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NStreams.NConfig.ActorSystem.TActorSystemConfig.class, NStreams.NConfig.ActorSystem.TActorSystemConfig.Builder.class);
    }

    public interface TExecutorOrBuilder extends
        // @@protoc_insertion_point(interface_extends:NStreams.NConfig.TActorSystemConfig.TExecutor)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .NStreams.NConfig.TActorSystemConfig.TExecutor.EType Type = 1 [default = BASIC];</code>
       */
      boolean hasType();
      /**
       * <code>optional .NStreams.NConfig.TActorSystemConfig.TExecutor.EType Type = 1 [default = BASIC];</code>
       */
      NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType getType();

      /**
       * <code>optional uint32 Threads = 2;</code>
       */
      boolean hasThreads();
      /**
       * <code>optional uint32 Threads = 2;</code>
       */
      int getThreads();

      /**
       * <code>optional uint64 SpinThreshold = 3;</code>
       */
      boolean hasSpinThreshold();
      /**
       * <code>optional uint64 SpinThreshold = 3;</code>
       */
      long getSpinThreshold();

      /**
       * <code>optional string Name = 4;</code>
       */
      boolean hasName();
      /**
       * <code>optional string Name = 4;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string Name = 4;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();
    }
    /**
     * Protobuf type {@code NStreams.NConfig.TActorSystemConfig.TExecutor}
     */
    public  static final class TExecutor extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:NStreams.NConfig.TActorSystemConfig.TExecutor)
        TExecutorOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TExecutor.newBuilder() to construct.
      private TExecutor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TExecutor() {
        type_ = 1;
        threads_ = 0;
        spinThreshold_ = 0L;
        name_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TExecutor(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType value = NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  type_ = rawValue;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                threads_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                spinThreshold_ = input.readUInt64();
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                name_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return NStreams.NConfig.ActorSystem.internal_static_NStreams_NConfig_TActorSystemConfig_TExecutor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return NStreams.NConfig.ActorSystem.internal_static_NStreams_NConfig_TActorSystemConfig_TExecutor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.class, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder.class);
      }

      /**
       * Protobuf enum {@code NStreams.NConfig.TActorSystemConfig.TExecutor.EType}
       */
      public enum EType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>BASIC = 1;</code>
         */
        BASIC(1),
        /**
         * <code>IO = 2;</code>
         */
        IO(2),
        ;

        /**
         * <code>BASIC = 1;</code>
         */
        public static final int BASIC_VALUE = 1;
        /**
         * <code>IO = 2;</code>
         */
        public static final int IO_VALUE = 2;


        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static EType valueOf(int value) {
          return forNumber(value);
        }

        public static EType forNumber(int value) {
          switch (value) {
            case 1: return BASIC;
            case 2: return IO;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<EType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            EType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<EType>() {
                public EType findValueByNumber(int number) {
                  return EType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.getDescriptor().getEnumTypes().get(0);
        }

        private static final EType[] VALUES = values();

        public static EType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private EType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:NStreams.NConfig.TActorSystemConfig.TExecutor.EType)
      }

      private int bitField0_;
      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_;
      /**
       * <code>optional .NStreams.NConfig.TActorSystemConfig.TExecutor.EType Type = 1 [default = BASIC];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .NStreams.NConfig.TActorSystemConfig.TExecutor.EType Type = 1 [default = BASIC];</code>
       */
      public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType getType() {
        NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType result = NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType.valueOf(type_);
        return result == null ? NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType.BASIC : result;
      }

      public static final int THREADS_FIELD_NUMBER = 2;
      private int threads_;
      /**
       * <code>optional uint32 Threads = 2;</code>
       */
      public boolean hasThreads() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 Threads = 2;</code>
       */
      public int getThreads() {
        return threads_;
      }

      public static final int SPINTHRESHOLD_FIELD_NUMBER = 3;
      private long spinThreshold_;
      /**
       * <code>optional uint64 SpinThreshold = 3;</code>
       */
      public boolean hasSpinThreshold() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 SpinThreshold = 3;</code>
       */
      public long getSpinThreshold() {
        return spinThreshold_;
      }

      public static final int NAME_FIELD_NUMBER = 4;
      private volatile java.lang.Object name_;
      /**
       * <code>optional string Name = 4;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string Name = 4;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string Name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, type_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, threads_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(3, spinThreshold_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, name_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, threads_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, spinThreshold_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, name_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor)) {
          return super.equals(obj);
        }
        NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor other = (NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor) obj;

        boolean result = true;
        result = result && (hasType() == other.hasType());
        if (hasType()) {
          result = result && type_ == other.type_;
        }
        result = result && (hasThreads() == other.hasThreads());
        if (hasThreads()) {
          result = result && (getThreads()
              == other.getThreads());
        }
        result = result && (hasSpinThreshold() == other.hasSpinThreshold());
        if (hasSpinThreshold()) {
          result = result && (getSpinThreshold()
              == other.getSpinThreshold());
        }
        result = result && (hasName() == other.hasName());
        if (hasName()) {
          result = result && getName()
              .equals(other.getName());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasType()) {
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + type_;
        }
        if (hasThreads()) {
          hash = (37 * hash) + THREADS_FIELD_NUMBER;
          hash = (53 * hash) + getThreads();
        }
        if (hasSpinThreshold()) {
          hash = (37 * hash) + SPINTHRESHOLD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSpinThreshold());
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code NStreams.NConfig.TActorSystemConfig.TExecutor}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:NStreams.NConfig.TActorSystemConfig.TExecutor)
          NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return NStreams.NConfig.ActorSystem.internal_static_NStreams_NConfig_TActorSystemConfig_TExecutor_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return NStreams.NConfig.ActorSystem.internal_static_NStreams_NConfig_TActorSystemConfig_TExecutor_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.class, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder.class);
        }

        // Construct using NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          type_ = 1;
          bitField0_ = (bitField0_ & ~0x00000001);
          threads_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          spinThreshold_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return NStreams.NConfig.ActorSystem.internal_static_NStreams_NConfig_TActorSystemConfig_TExecutor_descriptor;
        }

        public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor getDefaultInstanceForType() {
          return NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.getDefaultInstance();
        }

        public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor build() {
          NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor buildPartial() {
          NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor result = new NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.threads_ = threads_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.spinThreshold_ = spinThreshold_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.name_ = name_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor) {
            return mergeFrom((NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor other) {
          if (other == NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.getDefaultInstance()) return this;
          if (other.hasType()) {
            setType(other.getType());
          }
          if (other.hasThreads()) {
            setThreads(other.getThreads());
          }
          if (other.hasSpinThreshold()) {
            setSpinThreshold(other.getSpinThreshold());
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000008;
            name_ = other.name_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int type_ = 1;
        /**
         * <code>optional .NStreams.NConfig.TActorSystemConfig.TExecutor.EType Type = 1 [default = BASIC];</code>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .NStreams.NConfig.TActorSystemConfig.TExecutor.EType Type = 1 [default = BASIC];</code>
         */
        public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType getType() {
          NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType result = NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType.valueOf(type_);
          return result == null ? NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType.BASIC : result;
        }
        /**
         * <code>optional .NStreams.NConfig.TActorSystemConfig.TExecutor.EType Type = 1 [default = BASIC];</code>
         */
        public Builder setType(NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.EType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .NStreams.NConfig.TActorSystemConfig.TExecutor.EType Type = 1 [default = BASIC];</code>
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = 1;
          onChanged();
          return this;
        }

        private int threads_ ;
        /**
         * <code>optional uint32 Threads = 2;</code>
         */
        public boolean hasThreads() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 Threads = 2;</code>
         */
        public int getThreads() {
          return threads_;
        }
        /**
         * <code>optional uint32 Threads = 2;</code>
         */
        public Builder setThreads(int value) {
          bitField0_ |= 0x00000002;
          threads_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 Threads = 2;</code>
         */
        public Builder clearThreads() {
          bitField0_ = (bitField0_ & ~0x00000002);
          threads_ = 0;
          onChanged();
          return this;
        }

        private long spinThreshold_ ;
        /**
         * <code>optional uint64 SpinThreshold = 3;</code>
         */
        public boolean hasSpinThreshold() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 SpinThreshold = 3;</code>
         */
        public long getSpinThreshold() {
          return spinThreshold_;
        }
        /**
         * <code>optional uint64 SpinThreshold = 3;</code>
         */
        public Builder setSpinThreshold(long value) {
          bitField0_ |= 0x00000004;
          spinThreshold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 SpinThreshold = 3;</code>
         */
        public Builder clearSpinThreshold() {
          bitField0_ = (bitField0_ & ~0x00000004);
          spinThreshold_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string Name = 4;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string Name = 4;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string Name = 4;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string Name = 4;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string Name = 4;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000008);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string Name = 4;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          name_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:NStreams.NConfig.TActorSystemConfig.TExecutor)
      }

      // @@protoc_insertion_point(class_scope:NStreams.NConfig.TActorSystemConfig.TExecutor)
      private static final NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor();
      }

      public static NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<TExecutor>
          PARSER = new com.google.protobuf.AbstractParser<TExecutor>() {
        public TExecutor parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new TExecutor(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TExecutor> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TExecutor> getParserForType() {
        return PARSER;
      }

      public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int EXECUTOR_FIELD_NUMBER = 1;
    private java.util.List<NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor> executor_;
    /**
     * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
     */
    public java.util.List<NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor> getExecutorList() {
      return executor_;
    }
    /**
     * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
     */
    public java.util.List<? extends NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutorOrBuilder> 
        getExecutorOrBuilderList() {
      return executor_;
    }
    /**
     * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
     */
    public int getExecutorCount() {
      return executor_.size();
    }
    /**
     * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
     */
    public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor getExecutor(int index) {
      return executor_.get(index);
    }
    /**
     * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
     */
    public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutorOrBuilder getExecutorOrBuilder(
        int index) {
      return executor_.get(index);
    }

    public static final int SYSTEMEXECUTORPOOLID_FIELD_NUMBER = 10;
    private int systemExecutorPoolId_;
    /**
     * <code>optional uint32 SystemExecutorPoolId = 10 [default = 0];</code>
     */
    public boolean hasSystemExecutorPoolId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 SystemExecutorPoolId = 10 [default = 0];</code>
     */
    public int getSystemExecutorPoolId() {
      return systemExecutorPoolId_;
    }

    public static final int USEREXECUTORPOOLID_FIELD_NUMBER = 11;
    private int userExecutorPoolId_;
    /**
     * <code>optional uint32 UserExecutorPoolId = 11 [default = 1];</code>
     */
    public boolean hasUserExecutorPoolId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 UserExecutorPoolId = 11 [default = 1];</code>
     */
    public int getUserExecutorPoolId() {
      return userExecutorPoolId_;
    }

    public static final int IOEXECUTORPOOLID_FIELD_NUMBER = 12;
    private int ioExecutorPoolId_;
    /**
     * <code>optional uint32 IoExecutorPoolId = 12 [default = 2];</code>
     */
    public boolean hasIoExecutorPoolId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 IoExecutorPoolId = 12 [default = 2];</code>
     */
    public int getIoExecutorPoolId() {
      return ioExecutorPoolId_;
    }

    public static final int BATCHEXECUTORPOOLID_FIELD_NUMBER = 13;
    private int batchExecutorPoolId_;
    /**
     * <code>optional uint32 BatchExecutorPoolId = 13 [default = 3];</code>
     */
    public boolean hasBatchExecutorPoolId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 BatchExecutorPoolId = 13 [default = 3];</code>
     */
    public int getBatchExecutorPoolId() {
      return batchExecutorPoolId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < executor_.size(); i++) {
        output.writeMessage(1, executor_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(10, systemExecutorPoolId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(11, userExecutorPoolId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(12, ioExecutorPoolId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(13, batchExecutorPoolId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < executor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, executor_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, systemExecutorPoolId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, userExecutorPoolId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, ioExecutorPoolId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, batchExecutorPoolId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NStreams.NConfig.ActorSystem.TActorSystemConfig)) {
        return super.equals(obj);
      }
      NStreams.NConfig.ActorSystem.TActorSystemConfig other = (NStreams.NConfig.ActorSystem.TActorSystemConfig) obj;

      boolean result = true;
      result = result && getExecutorList()
          .equals(other.getExecutorList());
      result = result && (hasSystemExecutorPoolId() == other.hasSystemExecutorPoolId());
      if (hasSystemExecutorPoolId()) {
        result = result && (getSystemExecutorPoolId()
            == other.getSystemExecutorPoolId());
      }
      result = result && (hasUserExecutorPoolId() == other.hasUserExecutorPoolId());
      if (hasUserExecutorPoolId()) {
        result = result && (getUserExecutorPoolId()
            == other.getUserExecutorPoolId());
      }
      result = result && (hasIoExecutorPoolId() == other.hasIoExecutorPoolId());
      if (hasIoExecutorPoolId()) {
        result = result && (getIoExecutorPoolId()
            == other.getIoExecutorPoolId());
      }
      result = result && (hasBatchExecutorPoolId() == other.hasBatchExecutorPoolId());
      if (hasBatchExecutorPoolId()) {
        result = result && (getBatchExecutorPoolId()
            == other.getBatchExecutorPoolId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getExecutorCount() > 0) {
        hash = (37 * hash) + EXECUTOR_FIELD_NUMBER;
        hash = (53 * hash) + getExecutorList().hashCode();
      }
      if (hasSystemExecutorPoolId()) {
        hash = (37 * hash) + SYSTEMEXECUTORPOOLID_FIELD_NUMBER;
        hash = (53 * hash) + getSystemExecutorPoolId();
      }
      if (hasUserExecutorPoolId()) {
        hash = (37 * hash) + USEREXECUTORPOOLID_FIELD_NUMBER;
        hash = (53 * hash) + getUserExecutorPoolId();
      }
      if (hasIoExecutorPoolId()) {
        hash = (37 * hash) + IOEXECUTORPOOLID_FIELD_NUMBER;
        hash = (53 * hash) + getIoExecutorPoolId();
      }
      if (hasBatchExecutorPoolId()) {
        hash = (37 * hash) + BATCHEXECUTORPOOLID_FIELD_NUMBER;
        hash = (53 * hash) + getBatchExecutorPoolId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NStreams.NConfig.ActorSystem.TActorSystemConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NStreams.NConfig.ActorSystem.TActorSystemConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code NStreams.NConfig.TActorSystemConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NStreams.NConfig.TActorSystemConfig)
        NStreams.NConfig.ActorSystem.TActorSystemConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return NStreams.NConfig.ActorSystem.internal_static_NStreams_NConfig_TActorSystemConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return NStreams.NConfig.ActorSystem.internal_static_NStreams_NConfig_TActorSystemConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NStreams.NConfig.ActorSystem.TActorSystemConfig.class, NStreams.NConfig.ActorSystem.TActorSystemConfig.Builder.class);
      }

      // Construct using NStreams.NConfig.ActorSystem.TActorSystemConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getExecutorFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (executorBuilder_ == null) {
          executor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          executorBuilder_.clear();
        }
        systemExecutorPoolId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        userExecutorPoolId_ = 1;
        bitField0_ = (bitField0_ & ~0x00000004);
        ioExecutorPoolId_ = 2;
        bitField0_ = (bitField0_ & ~0x00000008);
        batchExecutorPoolId_ = 3;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return NStreams.NConfig.ActorSystem.internal_static_NStreams_NConfig_TActorSystemConfig_descriptor;
      }

      public NStreams.NConfig.ActorSystem.TActorSystemConfig getDefaultInstanceForType() {
        return NStreams.NConfig.ActorSystem.TActorSystemConfig.getDefaultInstance();
      }

      public NStreams.NConfig.ActorSystem.TActorSystemConfig build() {
        NStreams.NConfig.ActorSystem.TActorSystemConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public NStreams.NConfig.ActorSystem.TActorSystemConfig buildPartial() {
        NStreams.NConfig.ActorSystem.TActorSystemConfig result = new NStreams.NConfig.ActorSystem.TActorSystemConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (executorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            executor_ = java.util.Collections.unmodifiableList(executor_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.executor_ = executor_;
        } else {
          result.executor_ = executorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.systemExecutorPoolId_ = systemExecutorPoolId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userExecutorPoolId_ = userExecutorPoolId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ioExecutorPoolId_ = ioExecutorPoolId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.batchExecutorPoolId_ = batchExecutorPoolId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NStreams.NConfig.ActorSystem.TActorSystemConfig) {
          return mergeFrom((NStreams.NConfig.ActorSystem.TActorSystemConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NStreams.NConfig.ActorSystem.TActorSystemConfig other) {
        if (other == NStreams.NConfig.ActorSystem.TActorSystemConfig.getDefaultInstance()) return this;
        if (executorBuilder_ == null) {
          if (!other.executor_.isEmpty()) {
            if (executor_.isEmpty()) {
              executor_ = other.executor_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureExecutorIsMutable();
              executor_.addAll(other.executor_);
            }
            onChanged();
          }
        } else {
          if (!other.executor_.isEmpty()) {
            if (executorBuilder_.isEmpty()) {
              executorBuilder_.dispose();
              executorBuilder_ = null;
              executor_ = other.executor_;
              bitField0_ = (bitField0_ & ~0x00000001);
              executorBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExecutorFieldBuilder() : null;
            } else {
              executorBuilder_.addAllMessages(other.executor_);
            }
          }
        }
        if (other.hasSystemExecutorPoolId()) {
          setSystemExecutorPoolId(other.getSystemExecutorPoolId());
        }
        if (other.hasUserExecutorPoolId()) {
          setUserExecutorPoolId(other.getUserExecutorPoolId());
        }
        if (other.hasIoExecutorPoolId()) {
          setIoExecutorPoolId(other.getIoExecutorPoolId());
        }
        if (other.hasBatchExecutorPoolId()) {
          setBatchExecutorPoolId(other.getBatchExecutorPoolId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NStreams.NConfig.ActorSystem.TActorSystemConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NStreams.NConfig.ActorSystem.TActorSystemConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor> executor_ =
        java.util.Collections.emptyList();
      private void ensureExecutorIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          executor_ = new java.util.ArrayList<NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor>(executor_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutorOrBuilder> executorBuilder_;

      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public java.util.List<NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor> getExecutorList() {
        if (executorBuilder_ == null) {
          return java.util.Collections.unmodifiableList(executor_);
        } else {
          return executorBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public int getExecutorCount() {
        if (executorBuilder_ == null) {
          return executor_.size();
        } else {
          return executorBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor getExecutor(int index) {
        if (executorBuilder_ == null) {
          return executor_.get(index);
        } else {
          return executorBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public Builder setExecutor(
          int index, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor value) {
        if (executorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExecutorIsMutable();
          executor_.set(index, value);
          onChanged();
        } else {
          executorBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public Builder setExecutor(
          int index, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder builderForValue) {
        if (executorBuilder_ == null) {
          ensureExecutorIsMutable();
          executor_.set(index, builderForValue.build());
          onChanged();
        } else {
          executorBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public Builder addExecutor(NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor value) {
        if (executorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExecutorIsMutable();
          executor_.add(value);
          onChanged();
        } else {
          executorBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public Builder addExecutor(
          int index, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor value) {
        if (executorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExecutorIsMutable();
          executor_.add(index, value);
          onChanged();
        } else {
          executorBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public Builder addExecutor(
          NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder builderForValue) {
        if (executorBuilder_ == null) {
          ensureExecutorIsMutable();
          executor_.add(builderForValue.build());
          onChanged();
        } else {
          executorBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public Builder addExecutor(
          int index, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder builderForValue) {
        if (executorBuilder_ == null) {
          ensureExecutorIsMutable();
          executor_.add(index, builderForValue.build());
          onChanged();
        } else {
          executorBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public Builder addAllExecutor(
          java.lang.Iterable<? extends NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor> values) {
        if (executorBuilder_ == null) {
          ensureExecutorIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, executor_);
          onChanged();
        } else {
          executorBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public Builder clearExecutor() {
        if (executorBuilder_ == null) {
          executor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          executorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public Builder removeExecutor(int index) {
        if (executorBuilder_ == null) {
          ensureExecutorIsMutable();
          executor_.remove(index);
          onChanged();
        } else {
          executorBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder getExecutorBuilder(
          int index) {
        return getExecutorFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutorOrBuilder getExecutorOrBuilder(
          int index) {
        if (executorBuilder_ == null) {
          return executor_.get(index);  } else {
          return executorBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public java.util.List<? extends NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutorOrBuilder> 
           getExecutorOrBuilderList() {
        if (executorBuilder_ != null) {
          return executorBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(executor_);
        }
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder addExecutorBuilder() {
        return getExecutorFieldBuilder().addBuilder(
            NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.getDefaultInstance());
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder addExecutorBuilder(
          int index) {
        return getExecutorFieldBuilder().addBuilder(
            index, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.getDefaultInstance());
      }
      /**
       * <code>repeated .NStreams.NConfig.TActorSystemConfig.TExecutor Executor = 1;</code>
       */
      public java.util.List<NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder> 
           getExecutorBuilderList() {
        return getExecutorFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutorOrBuilder> 
          getExecutorFieldBuilder() {
        if (executorBuilder_ == null) {
          executorBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutor.Builder, NStreams.NConfig.ActorSystem.TActorSystemConfig.TExecutorOrBuilder>(
                  executor_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          executor_ = null;
        }
        return executorBuilder_;
      }

      private int systemExecutorPoolId_ ;
      /**
       * <code>optional uint32 SystemExecutorPoolId = 10 [default = 0];</code>
       */
      public boolean hasSystemExecutorPoolId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 SystemExecutorPoolId = 10 [default = 0];</code>
       */
      public int getSystemExecutorPoolId() {
        return systemExecutorPoolId_;
      }
      /**
       * <code>optional uint32 SystemExecutorPoolId = 10 [default = 0];</code>
       */
      public Builder setSystemExecutorPoolId(int value) {
        bitField0_ |= 0x00000002;
        systemExecutorPoolId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 SystemExecutorPoolId = 10 [default = 0];</code>
       */
      public Builder clearSystemExecutorPoolId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        systemExecutorPoolId_ = 0;
        onChanged();
        return this;
      }

      private int userExecutorPoolId_ = 1;
      /**
       * <code>optional uint32 UserExecutorPoolId = 11 [default = 1];</code>
       */
      public boolean hasUserExecutorPoolId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 UserExecutorPoolId = 11 [default = 1];</code>
       */
      public int getUserExecutorPoolId() {
        return userExecutorPoolId_;
      }
      /**
       * <code>optional uint32 UserExecutorPoolId = 11 [default = 1];</code>
       */
      public Builder setUserExecutorPoolId(int value) {
        bitField0_ |= 0x00000004;
        userExecutorPoolId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 UserExecutorPoolId = 11 [default = 1];</code>
       */
      public Builder clearUserExecutorPoolId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        userExecutorPoolId_ = 1;
        onChanged();
        return this;
      }

      private int ioExecutorPoolId_ = 2;
      /**
       * <code>optional uint32 IoExecutorPoolId = 12 [default = 2];</code>
       */
      public boolean hasIoExecutorPoolId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 IoExecutorPoolId = 12 [default = 2];</code>
       */
      public int getIoExecutorPoolId() {
        return ioExecutorPoolId_;
      }
      /**
       * <code>optional uint32 IoExecutorPoolId = 12 [default = 2];</code>
       */
      public Builder setIoExecutorPoolId(int value) {
        bitField0_ |= 0x00000008;
        ioExecutorPoolId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 IoExecutorPoolId = 12 [default = 2];</code>
       */
      public Builder clearIoExecutorPoolId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ioExecutorPoolId_ = 2;
        onChanged();
        return this;
      }

      private int batchExecutorPoolId_ = 3;
      /**
       * <code>optional uint32 BatchExecutorPoolId = 13 [default = 3];</code>
       */
      public boolean hasBatchExecutorPoolId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 BatchExecutorPoolId = 13 [default = 3];</code>
       */
      public int getBatchExecutorPoolId() {
        return batchExecutorPoolId_;
      }
      /**
       * <code>optional uint32 BatchExecutorPoolId = 13 [default = 3];</code>
       */
      public Builder setBatchExecutorPoolId(int value) {
        bitField0_ |= 0x00000010;
        batchExecutorPoolId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BatchExecutorPoolId = 13 [default = 3];</code>
       */
      public Builder clearBatchExecutorPoolId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        batchExecutorPoolId_ = 3;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NStreams.NConfig.TActorSystemConfig)
    }

    // @@protoc_insertion_point(class_scope:NStreams.NConfig.TActorSystemConfig)
    private static final NStreams.NConfig.ActorSystem.TActorSystemConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NStreams.NConfig.ActorSystem.TActorSystemConfig();
    }

    public static NStreams.NConfig.ActorSystem.TActorSystemConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TActorSystemConfig>
        PARSER = new com.google.protobuf.AbstractParser<TActorSystemConfig>() {
      public TActorSystemConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TActorSystemConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TActorSystemConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TActorSystemConfig> getParserForType() {
      return PARSER;
    }

    public NStreams.NConfig.ActorSystem.TActorSystemConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NStreams_NConfig_TActorSystemConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NStreams_NConfig_TActorSystemConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NStreams_NConfig_TActorSystemConfig_TExecutor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NStreams_NConfig_TActorSystemConfig_TExecutor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5kikimr/streaming/libs/config/proto/act" +
      "or_system.proto\022\020NStreams.NConfig\"\376\002\n\022TA" +
      "ctorSystemConfig\022@\n\010Executor\030\001 \003(\0132..NSt" +
      "reams.NConfig.TActorSystemConfig.TExecut" +
      "or\022\037\n\024SystemExecutorPoolId\030\n \001(\r:\0010\022\035\n\022U" +
      "serExecutorPoolId\030\013 \001(\r:\0011\022\033\n\020IoExecutor" +
      "PoolId\030\014 \001(\r:\0012\022\036\n\023BatchExecutorPoolId\030\r" +
      " \001(\r:\0013\032\250\001\n\tTExecutor\022I\n\004Type\030\001 \001(\01624.NS" +
      "treams.NConfig.TActorSystemConfig.TExecu" +
      "tor.EType:\005BASIC\022\017\n\007Threads\030\002 \001(\r\022\025\n\rSpi",
      "nThreshold\030\003 \001(\004\022\014\n\004Name\030\004 \001(\t\"\032\n\005EType\022" +
      "\t\n\005BASIC\020\001\022\006\n\002IO\020\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_NStreams_NConfig_TActorSystemConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_NStreams_NConfig_TActorSystemConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NStreams_NConfig_TActorSystemConfig_descriptor,
        new java.lang.String[] { "Executor", "SystemExecutorPoolId", "UserExecutorPoolId", "IoExecutorPoolId", "BatchExecutorPoolId", });
    internal_static_NStreams_NConfig_TActorSystemConfig_TExecutor_descriptor =
      internal_static_NStreams_NConfig_TActorSystemConfig_descriptor.getNestedTypes().get(0);
    internal_static_NStreams_NConfig_TActorSystemConfig_TExecutor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NStreams_NConfig_TActorSystemConfig_TExecutor_descriptor,
        new java.lang.String[] { "Type", "Threads", "SpinThreshold", "Name", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
